{"version":3,"sources":["Components/TitleBar.jsx","Components/PersonalContent.jsx","redux/ducks/swipe.js","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","redux/ducks/mobile.js","Components/NavBar.jsx","Components/Mobile.jsx","Components/MainContent.jsx","App.js","reportWebVitals.js","redux/ducks/mode.js","redux/configureStore.js","js/utils.js","index.js"],"names":["TitleBar","percentRight","useSelector","state","swipe","percentLeft","titleBarCSS","height","id","className","style","minHeight","paddingTop","fontSize","lineHeight","width","minWidth","backgroundColor","borderRight","borderLeft","PersonalContent","NO_SWIPE_CARD","NEW_SWIPE_CARD","NEW_PERCENT_RIGHT","initialState","hasSwipeCard","reducer","action","type","payload","percent","SwipeCard","props","text","immobile","boundPos","color","exist","useRef","useState","x","y","position","setPosition","timeStamp","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","latestVel","setLatestVel","theta","direction","swipeAngle","setSwipeAngle","isInitial","setIsInitial","swiped","setSwiped","dispatch","useDispatch","SWIPE_ANGLE_MAX","Math","PI","windowWidth","window","innerWidth","windowHeight","innerHeight","swipedColor","distReturnFromBorder","swipeCardCSS","left","top","opacity","background","transform","transitionDuration","TIME_BETWEEN_SWIPES","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","addEventListener","removeEventListener","console","log","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","abs","factor","ratio","tan","sign","swipedAway","velGen","dx","dy","dt","v","sqrt","pow","atan","Fragment","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","SwipeContent","swipeContentRef","index","setIndex","currObj","testArr","nextObj","emptyObj","random","undefined","Desktop","SET_DISPLAY","SWIPE_CONTENT","PERSONAL_CONTENT","setDisplay","display","NavBar","modeIsMobile","mode","mobile","displayBtnCSS","notDisplayBtnCSS","navbarCSS","icon","faClone","size","onClick","faUserNinja","Mobile","displaysCSS","displayValues","swipeContent","personalContent","MainContent","mainContentCSS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_MOBILE","SET_DESKTOP","combineReducers","modeReducer","swipeReducer","mobileReducer","store","createStore","initializeEventListeners","updateMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f458f320.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let percentRight = useSelector(state => state.swipe.percentRight);\r\n  let percentLeft = (1 - percentRight) * 100;\r\n  percentRight *= 100;\r\n\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" className=\"container-fluid\" style={titleBarCSS}>\r\n      <div className=\"row d-flex\" style={{ height: \"90%\", minHeight: \"90%\", paddingTop: \"7px\" }}>\r\n        <div className=\"col-12\" style={{ fontSize: \"2.5rem\", lineHeight: \"1\" }}>\r\n          <div>\r\n            PennAdvice\r\n          </div>\r\n          <div style={{ fontSize: \"0.75rem\" }}>\r\n            &nbsp; by Penn Spark Gray\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"10%\", minHeight: \"10%\" }}>\r\n        <div className=\"percent-bar\" style={{ width: `${percentLeft}%`, minWidth: `${percentLeft}%`, backgroundColor: \"#990000\", borderRight: `${percentLeft > 0 ? \"1px solid white\" : \"\"}` }} />\r\n        <div className=\"percent-bar\" style={{ width: `${percentRight}%`, minWidth: `${percentRight}%`, backgroundColor: \"#011F5b\", borderLeft: `${percentRight > 0 ? \"1px solid white\" : \"\"}` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent() {\r\n    let personalContentCSS = {}\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={personalContentCSS}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","const NO_SWIPE_CARD = \"NO_SWIPE_CARD\";\r\nconst NEW_SWIPE_CARD = \"NEW_SWIPE_CARD\";\r\nconst NEW_PERCENT_RIGHT = \"NEW_PERCENT_RIGHT\";\r\n\r\nexport const noSwipeCard = () => ({\r\n    type: NO_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newSwipeCard = () => ({\r\n    type: NEW_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newPercentRight = (percent) => ({\r\n    type: NEW_PERCENT_RIGHT,\r\n    payload: {\r\n        percent: percent\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    hasSwipeCard: true,\r\n    percentRight: 1\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NO_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: false };\r\n        case NEW_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: true };\r\n        case NEW_PERCENT_RIGHT:\r\n            return { ...state, percentRight: action.payload.percent };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { noSwipeCard } from \"../redux/ducks/swipe\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { text, immobile, boundPos, color } = props;\r\n\r\n    let exist = useRef(true);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0, timeStamp: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [latestVel, setLatestVel] = useState(0);\r\n    const [swipeAngle, setSwipeAngle] = useState({ theta: 0, direction: 1 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const [swiped, setSwiped] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const VELOCITY_THRESHOLD = 1;\r\n    const SWIPE_ANGLE_MAX = 3 * Math.PI / 8;\r\n    const TIME_BETWEEN_SWIPES = 500;\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    let swipedColor = \"#990000\";\r\n    if (swipeAngle.direction == 1) {\r\n        swipedColor = \"#011F5b\";\r\n    }\r\n\r\n    let rotateDirection = 1;\r\n    let distReturnFromBorder = returnPos.x - boundPos.x;\r\n\r\n    let swipeCardCSS = {\r\n        width: `${windowWidth < windowHeight ? \"85vw\" : \"50vh\"}`,\r\n        height: `${windowWidth < windowHeight ? \"70vh\" : \"75vh\"}`,\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`,\r\n        opacity: `${swiped ? 0 : 1}`,\r\n        background: `${swiped ? swipedColor : \"\"}`,\r\n        transform: `rotate(${rotateDirection * (position.x - returnPos.x) / distReturnFromBorder * (distReturnFromBorder >= 0.1 * boundPos.width ? 7 : 0.5)}deg)`,\r\n        transitionDuration: `${swiped ? TIME_BETWEEN_SWIPES + \"ms\" : \"\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n            console.log(\"cleanup: \" + text);\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.clientX;\r\n                let clientY = e.clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.touches[0].clientX;\r\n                let clientY = e.touches[0].clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        if (!swiped) {\r\n            setDragging(false);\r\n\r\n            if (latestVel > VELOCITY_THRESHOLD && Math.abs(swipeAngle.theta) < SWIPE_ANGLE_MAX) {\r\n                let factor = window.innerWidth / 5;\r\n                let ratio = Math.tan(swipeAngle.theta);\r\n                let sign = swipeAngle.direction;\r\n\r\n                let swipedAway = {\r\n                    x: sign * factor + position.x,\r\n                    y: sign * factor * ratio + position.y\r\n                };\r\n\r\n                setSwiped(true);\r\n                setPosition(swipedAway);\r\n                setTimeout(() => {\r\n                    dispatch(noSwipeCard());\r\n                }, TIME_BETWEEN_SWIPES);\r\n            } else {\r\n                setPosition(returnPos);\r\n            }\r\n        }\r\n    }\r\n\r\n    const velGen = (dx, dy, dt) => {\r\n        let v = (Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))) / dt;\r\n        let theta = Math.atan(dy / dx);\r\n        let direction = 1;\r\n\r\n        if (dx < 0) {\r\n            direction = -1;\r\n        }\r\n\r\n        setSwipeAngle({ theta, direction });\r\n        setLatestVel(v);\r\n        return v;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {immobile ? <div ref={swipeCardRef} className={\"no-select swipe-card swipe-card-return\"} style={swipeCardCSS}>\r\n                <div className=\"swipe-card-content\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    <div>\r\n                        {text} (immobile)\r\n                    </div>\r\n                </div>\r\n            </div> : <div ref={swipeCardRef} className={`no-select swipe-card ${swiped ? \"swipe-card-swiped\" : \"\"} ${!dragging && !swiped ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleEndDrag}\r\n                onMouseOut={handleEndDrag}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleEndDrag}\r\n                onTouchMove={handleTouchMove}>\r\n                <div className=\"swipe-card-content\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    <div>\r\n                        {text}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newPercentRight, newSwipeCard } from \"../redux/ducks/swipe\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {}\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let [index, setIndex] = useState(0);\r\n    let hasSwipeCard = useSelector(state => state.swipe.hasSwipeCard);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!hasSwipeCard) {\r\n            setIndex(index + 1);\r\n            console.log(\"new\");\r\n            dispatch(newSwipeCard());\r\n            dispatch(newPercentRight(currObj.percentRight));\r\n        }\r\n    }, [hasSwipeCard]);\r\n\r\n    const testArr = [{ text: \"hello 1 testArr\", percentRight: 0 }, { text: \"hello 2 testArr\", percentRight: 0.75 }, { text: \"hello 3 testArr\", percentRight: 0 }, { text: \"hello 4 testArr\", percentRight: 1 }];\r\n\r\n    let currObj = testArr[index];\r\n    let nextObj = testArr[index + 1];\r\n\r\n    const emptyObj = {\r\n        text: \"NO NEW CONTENT\",\r\n        percentRight: Math.random()\r\n    };\r\n\r\n    if (currObj === undefined) {\r\n        currObj = emptyObj;\r\n    }\r\n\r\n    if (nextObj === undefined) {\r\n        nextObj = emptyObj;\r\n    }\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard immobile={true} boundPos={position} color=\"#000000\" text={nextObj.text} />\r\n                    {hasSwipeCard ? <SwipeCard immobile={false} boundPos={position} color=\"#000000\" text={currObj.text} /> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\">\r\n        <PersonalContent />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","const SET_DISPLAY = \"SET_DISPLAY\";\r\nexport const SWIPE_CONTENT = \"SWIPE_CONTENT\";\r\nexport const PERSONAL_CONTENT = \"PERSONAL_CONTENT\";\r\n\r\nexport const setDisplay = (display) => ({\r\n    type: SET_DISPLAY,\r\n    payload: {\r\n        display\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    display: \"SWIPE_CONTENT\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DISPLAY:\r\n            return { ...state, display: action.payload.display };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faClone, faUserNinja } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { setDisplay, SWIPE_CONTENT, PERSONAL_CONTENT } from \"../redux/ducks/mobile\";\r\n\r\nexport let NAV_BAR_HEIGHT = 50;\r\nexport let MOBILE_DISPLAY_TRANSITION_DURATION = 250\r\n\r\nfunction NavBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n    let display = useSelector(state => state.mobile.display);\r\n    const dispatch = useDispatch();\r\n\r\n    let displayBtnCSS = {\r\n        color: \"white\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let notDisplayBtnCSS = {\r\n        color: \"#424242\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let navbarCSS = {\r\n        display: `${modeIsMobile ? \"block\" : \"none\"}`,\r\n        height: `${NAV_BAR_HEIGHT}px`\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid\" style={navbarCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-6 full-height nav-bar-btn\">\r\n                    <FontAwesomeIcon icon={faClone} size=\"lg\" style={display == SWIPE_CONTENT ? displayBtnCSS : notDisplayBtnCSS} onClick={() => dispatch(setDisplay(SWIPE_CONTENT))} />\r\n                </div>\r\n                <div className=\"col-6 full-height nav-bar-btn\">\r\n                    <FontAwesomeIcon icon={faUserNinja} size=\"lg\" style={display == PERSONAL_CONTENT ? displayBtnCSS : notDisplayBtnCSS} onClick={() => dispatch(setDisplay(PERSONAL_CONTENT))} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SwipeContent from \"./SwipeContent\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport { PERSONAL_CONTENT, SWIPE_CONTENT } from \"../redux/ducks/mobile\";\r\nimport { MOBILE_DISPLAY_TRANSITION_DURATION } from \"./NavBar\";\r\n\r\nfunction Mobile() {\r\n  let display = useSelector(state => state.mobile.display);\r\n\r\n  let mobileCSS = {\r\n  }\r\n\r\n  let displaysCSS = {\r\n    transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n  }\r\n\r\n  let displayValues = {};\r\n\r\n  switch (display) {\r\n    case SWIPE_CONTENT:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100\r\n      };\r\n      break;\r\n    case PERSONAL_CONTENT:\r\n      displayValues = {\r\n        swipeContent: -100,\r\n        personalContent: 0\r\n      };\r\n      break;\r\n    default:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100\r\n      };\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={mobileCSS}>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.swipeContent}%` }}>\r\n        <SwipeContent />\r\n      </div>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.personalContent}%` }}>\r\n        <PersonalContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(100vh - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        <div className=\"col-12 full-height\">\r\n          {modeIsMobile ? <Mobile /> : <Desktop />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\nimport swipeReducer from \"./ducks/swipe\";\r\nimport mobileReducer from \"./ducks/mobile\";\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer,\r\n    swipe: swipeReducer,\r\n    mobile: mobileReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateMode();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateMode();\r\n    });\r\n}\r\n\r\nlet updateMode = () => {\r\n    let windowWidth = window.innerWidth;\r\n    let windowHeight = window.innerHeight;\r\n\r\n    // if ((windowWidth < 992) && (windowWidth < windowHeight)) {\r\n    //     store.dispatch(setMobile());\r\n    // } else {\r\n    //     store.dispatch(setDesktop());\r\n    // }\r\n\r\n    if ((windowWidth >= 992) && (windowWidth > windowHeight)) {\r\n        store.dispatch(setDesktop());\r\n    } else {\r\n        store.dispatch(setMobile());\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}