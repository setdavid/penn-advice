{"version":3,"sources":["Components/TitleBar.jsx","Components/PersonalContent.jsx","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/NavBar.jsx","Components/MainContent.jsx","redux/ducks/mode.js","redux/configureStore.js","js/utils.js","App.js","reportWebVitals.js","index.js"],"names":["TitleBar","titleBarCSS","height","backgroundColor","id","style","PersonalContent","className","SwipeCard","props","boundPos","useState","x","y","position","setPosition","prevCenter","setPrevCenter","dragging","setDragging","swipeCardCSS","width","left","top","handleEndDrag","e","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","preventDefault","SwipeContent","swipeContentRef","useRef","useEffect","current","getBoundingClientRect","ref","Desktop","Mobile","NavBar","navbarCSS","MainContent","useDispatch","modeIsMobile","useSelector","state","mode","mainContentCSS","SET_MOBILE","SET_DESKTOP","initialState","reducer","action","type","combineReducers","modeReducer","store","createStore","initializeEventListeners","window","addEventListener","updateMode","innerWidth","dispatch","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.203f85f5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`, \r\n    backgroundColor: \"blue\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" style={titleBarCSS}>\r\n        Penn Spark Gray\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent() {\r\n    let personalContentCSS = {\r\n        backgroundColor: \"white\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={personalContentCSS}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { boundPos } = props\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    let swipeCardCSS = {\r\n        backgroundColor: \"purple\",\r\n        width: \"50vh\",\r\n        height: \"75vh\",\r\n        position: \"absolute\",\r\n        left: `${position.x - boundPos.x}px`,\r\n        top: `${position.y - boundPos.y}px`\r\n    }\r\n\r\n    // const handlePan = (e) => {\r\n    //     let newPosition = {\r\n    //         x: position.x + (e.center.x - prevCenter.x),\r\n    //         y: position.y + (e.center.y - prevCenter.y), \r\n    //     }\r\n\r\n    //     let center = {\r\n    //         x: e.center.x,\r\n    //         y: e.center.y\r\n    //     }\r\n\r\n    //     console.log(\"position: \" + newPosition.x);\r\n    //     console.log(\"center: \" + e.center.x);\r\n    //     console.log(\"prevCetner: \" + prevCenter.x);\r\n\r\n\r\n    //     setPosition(newPosition);\r\n    //     setPrevCenter(center);\r\n    // }\r\n\r\n    const handleMouseDown = (e) => {\r\n        let center = {\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        setDragging(false);\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.clientX;\r\n            let clientY = e.clientY;\r\n\r\n            let newPosition = {\r\n                x: position.x + (clientX - prevCenter.x),\r\n                y: position.y + (clientY - prevCenter.y)\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY\r\n            }\r\n\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        let center = {\r\n            x: e.touches[0].clientX,\r\n            y: e.touches[0].clientY\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        e.preventDefault();\r\n        if (dragging) {\r\n            let clientX = e.touches[0].clientX;\r\n            let clientY = e.touches[0].clientY;\r\n\r\n            let newPosition = {\r\n                x: position.x + (clientX - prevCenter.x),\r\n                y: position.y + (clientY - prevCenter.y)\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY\r\n            }\r\n\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"swipe-card\" style={swipeCardCSS}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleEndDrag}\r\n            onMouseOut={handleEndDrag}\r\n            onMouseMove={handleMouseMove}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={handleEndDrag}\r\n            onTouchMove={handleTouchMove}>\r\n            <div>Tap Me</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({x: 0, y: 0});\r\n\r\n    let swipeContentCSS = {\r\n        backgroundColor: \"white\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n    }, [swipeContentRef.current]);\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard boundPos={position}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\">\r\n        <PersonalContent />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\n\r\nfunction Mobile() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" style={desktopCSS}>\r\n        Mobile Content\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\n\r\nexport let NAV_BAR_HEIGHT = 80;\r\n\r\nfunction NavBar() {\r\n    let navbarCSS = {\r\n        height: `${NAV_BAR_HEIGHT}px`, \r\n        backgroundColor: \"red\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid d-block d-lg-none\" style={navbarCSS}>\r\n            NavBar\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let dispatch = useDispatch();\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(100vh - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n    backgroundColor: \"green\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        <div className=\"col-12 full-height\">\r\n          {modeIsMobile ? <Mobile /> : <Desktop />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateMode();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateMode();\r\n\r\n        // console.log(windowWidth)\r\n        // console.log(store.getState().mode.modeIsMobile);\r\n    });\r\n}\r\n\r\nlet updateMode = () => {\r\n    let windowWidth = window.innerWidth;\r\n\r\n    if (windowWidth < 992) {\r\n        store.dispatch(setMobile());\r\n    } else {\r\n        store.dispatch(setDesktop());\r\n    }\r\n}","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport { initialize } from \"./js/utils\";\r\n\r\nfunction App() {\r\n  initialize();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}