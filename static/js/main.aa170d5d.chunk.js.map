{"version":3,"sources":["Components/TitleBar.jsx","Components/PersonalContent.jsx","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/NavBar.jsx","Components/MainContent.jsx","redux/ducks/mode.js","redux/configureStore.js","js/utils.js","App.js","reportWebVitals.js","index.js"],"names":["TitleBar","titleBarCSS","height","backgroundColor","id","style","PersonalContent","className","SwipeCard","props","exist","useRef","boundPos","useState","x","y","position","setPosition","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","isInitial","setIsInitial","swipeCardCSS","width","left","top","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","SwipeContent","swipeContentRef","overflow","Desktop","Mobile","NavBar","navbarCSS","MainContent","useDispatch","modeIsMobile","useSelector","state","mode","mainContentCSS","SET_MOBILE","SET_DESKTOP","initialState","reducer","action","type","combineReducers","modeReducer","store","createStore","initializeEventListeners","updateMode","innerWidth","dispatch","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa170d5d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`, \r\n    backgroundColor: \"blue\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" style={titleBarCSS}>\r\n        Penn Spark Gray\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent() {\r\n    let personalContentCSS = {\r\n        backgroundColor: \"white\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={personalContentCSS}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction SwipeCard(props) {\r\n    let exist = useRef(true);\r\n    let { boundPos } = props;\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n\r\n    let swipeCardCSS = {\r\n        backgroundColor: \"purple\",\r\n        width: \"50vh\",\r\n        height: \"75vh\",\r\n        position: \"absolute\",\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        let center = {\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        setPosition(returnPos);\r\n        setDragging(false);\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.clientX;\r\n            let clientY = e.clientY;\r\n\r\n            let newPosition = {\r\n                x: position.x + (clientX - prevCenter.x),\r\n                y: position.y + (clientY - prevCenter.y)\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY\r\n            }\r\n\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        let center = {\r\n            x: e.touches[0].clientX,\r\n            y: e.touches[0].clientY\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.touches[0].clientX;\r\n            let clientY = e.touches[0].clientY;\r\n\r\n            let newPosition = {\r\n                x: position.x + (clientX - prevCenter.x),\r\n                y: position.y + (clientY - prevCenter.y)\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY\r\n            }\r\n\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={swipeCardRef} className={`no-select swipe-card ${!dragging ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleEndDrag}\r\n            onMouseOut={handleEndDrag}\r\n            onMouseMove={handleMouseMove}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={handleEndDrag}\r\n            onTouchMove={handleTouchMove}>\r\n            SOME SAMPLE TEXT\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {\r\n        backgroundColor: \"white\",\r\n        overflow: \"hidden\"\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard boundPos={position} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\">\r\n        <PersonalContent />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Mobile() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-12 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\n\r\nexport let NAV_BAR_HEIGHT = 80;\r\n\r\nfunction NavBar() {\r\n    let navbarCSS = {\r\n        height: `${NAV_BAR_HEIGHT}px`, \r\n        backgroundColor: \"red\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid d-block d-lg-none\" style={navbarCSS}>\r\n            NavBar\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let dispatch = useDispatch();\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(100vh - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n    backgroundColor: \"green\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        <div className=\"col-12 full-height\">\r\n          {modeIsMobile ? <Mobile /> : <Desktop />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateMode();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateMode();\r\n\r\n        // console.log(windowWidth)\r\n        // console.log(store.getState().mode.modeIsMobile);\r\n    });\r\n}\r\n\r\nlet updateMode = () => {\r\n    let windowWidth = window.innerWidth;\r\n\r\n    if (windowWidth < 992) {\r\n        store.dispatch(setMobile());\r\n    } else {\r\n        store.dispatch(setDesktop());\r\n    }\r\n}","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport { initialize } from \"./js/utils\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}