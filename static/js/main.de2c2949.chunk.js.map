{"version":3,"sources":["Components/TitleBar.jsx","redux/ducks/desktop.js","Components/AccountContent.jsx","Components/PersonalContent.jsx","redux/ducks/mobile.js","Components/NavBar.jsx","Components/SideBar.jsx","redux/ducks/swipe.js","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/MainContent.jsx","App.js","reportWebVitals.js","redux/ducks/mode.js","redux/ducks/window-config.js","redux/configureStore.js","js/utils.js","index.js"],"names":["TitleBar","percentRight","useSelector","state","swipe","percentLeft","titleBarCSS","height","id","className","style","minHeight","paddingTop","fontSize","lineHeight","width","minWidth","backgroundColor","borderRight","borderLeft","SET_DISPLAY","ACCOUNT_CONTENT","PERSONAL_CONTENT","setDisplay","display","type","payload","initialState","reducer","action","AccountContent","props","PersonalContent","SWIPE_CONTENT","NavBar","modeIsMobile","mode","mobile","dispatch","useDispatch","displayBtnCSS","color","transitionDuration","notDisplayBtnCSS","navbarCSS","onClick","icon","faUserSecret","size","faClone","faPenSquare","SideBar","desktop","window","innerHeight","sidebarCSS","NO_SWIPE_CARD","NEW_SWIPE_CARD","NEW_PERCENT_RIGHT","hasSwipeCard","percent","SwipeCard","text","immobile","boundPos","exist","useRef","useState","x","y","position","setPosition","timeStamp","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","latestVel","setLatestVel","theta","direction","swipeAngle","setSwipeAngle","isInitial","setIsInitial","swiped","setSwiped","SWIPE_ANGLE_MAX","Math","PI","windowWidth","innerWidth","windowHeight","stateWindowHeight","windowConfig","swipedColor","distReturnFromBorder","swipeCardCSS","left","top","opacity","background","transform","TIME_BETWEEN_SWIPES","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","addEventListener","removeEventListener","console","log","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","abs","factor","ratio","tan","sign","swipedAway","velGen","dx","dy","dt","v","sqrt","pow","atan","Fragment","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","SwipeContent","swipeContentRef","index","setIndex","currObj","testArr","nextObj","emptyObj","random","undefined","Desktop","desktopCSS","displaysCSS","displayValues","accountContent","personalContent","paddingLeft","Mobile","swipeContent","MainContent","mainContentCSS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_MOBILE","SET_DESKTOP","SET_WINDOW_HEIGHT","combineReducers","modeReducer","swipeReducer","mobileReducer","windowConfigReducer","desktopReducer","store","createStore","initializeEventListeners","updateConfigs","setWindowHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de2c2949.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let percentRight = useSelector(state => state.swipe.percentRight);\r\n  let percentLeft = (1 - percentRight) * 100;\r\n  percentRight *= 100;\r\n\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" className=\"container-fluid\" style={titleBarCSS}>\r\n      <div className=\"row d-flex\" style={{ height: \"90%\", minHeight: \"90%\", paddingTop: \"7px\" }}>\r\n        <div className=\"col-12\" style={{ fontSize: \"2.5rem\", lineHeight: \"1\" }}>\r\n          <div>\r\n            PennAdvice\r\n          </div>\r\n          <div style={{ fontSize: \"0.75rem\" }}>\r\n            &nbsp; by Penn Spark Gray\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"10%\", minHeight: \"10%\" }}>\r\n        <div className=\"percent-bar\" style={{ width: `${percentLeft}%`, minWidth: `${percentLeft}%`, backgroundColor: \"#990000\", borderRight: `${percentLeft > 0 ? \"1px solid white\" : \"\"}` }} />\r\n        <div className=\"percent-bar\" style={{ width: `${percentRight}%`, minWidth: `${percentRight}%`, backgroundColor: \"#011F5b\", borderLeft: `${percentRight > 0 ? \"1px solid white\" : \"\"}` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","const SET_DISPLAY = \"SET_DISPLAY\";\r\nexport const ACCOUNT_CONTENT = \"ACCOUNT_CONTENT\";\r\nexport const PERSONAL_CONTENT = \"PERSONAL_CONTENT\";\r\n\r\nexport const setDisplay = (display) => ({\r\n    type: SET_DISPLAY,\r\n    payload: {\r\n        display\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    display: PERSONAL_CONTENT\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DISPLAY:\r\n            return { ...state, display: action.payload.display };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\n\r\nfunction AccountContent(props) {\r\n    let { style } = props;\r\n    let accountContentCSS = {}\r\n\r\n    return (\r\n        <div id=\"account-content\" className=\"full-height\" style={{ ...style, ...accountContentCSS }}>\r\n            Account Content\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AccountContent;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent(props) {\r\n    let { style } = props;\r\n    let personalContentCSS = {}\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={{ ...style, ...personalContentCSS }}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","const SET_DISPLAY = \"SET_DISPLAY\";\r\nexport const SWIPE_CONTENT = \"SWIPE_CONTENT\";\r\nexport const PERSONAL_CONTENT = \"PERSONAL_CONTENT\";\r\nexport const ACCOUNT_CONTENT = \"ACCOUNT_CONTENT\";\r\n\r\nexport const setDisplay = (display) => ({\r\n    type: SET_DISPLAY,\r\n    payload: {\r\n        display\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    display: SWIPE_CONTENT\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DISPLAY:\r\n            return { ...state, display: action.payload.display };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faClone, faUserSecret, faPenSquare } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { setDisplay, SWIPE_CONTENT, PERSONAL_CONTENT, ACCOUNT_CONTENT } from \"../redux/ducks/mobile\";\r\n\r\nexport let NAV_BAR_HEIGHT = 60;\r\nexport let MOBILE_DISPLAY_TRANSITION_DURATION = 250\r\n\r\nfunction NavBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n    let display = useSelector(state => state.mobile.display);\r\n    const dispatch = useDispatch();\r\n\r\n    let displayBtnCSS = {\r\n        color: \"white\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let notDisplayBtnCSS = {\r\n        color: \"#424242\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let navbarCSS = {\r\n        display: `${modeIsMobile ? \"block\" : \"none\"}`,\r\n        height: `${NAV_BAR_HEIGHT}px`\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid\" style={navbarCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplay(ACCOUNT_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faUserSecret} size=\"lg\" style={display == ACCOUNT_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplay(SWIPE_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faClone} size=\"lg\" style={display == SWIPE_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplay(PERSONAL_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faPenSquare} size=\"lg\" style={display == PERSONAL_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPenSquare, faUserSecret } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT, setDisplay } from \"../redux/ducks/desktop\";\r\n\r\nexport let SIDE_BAR_WIDTH = 60;\r\nexport let DESKTOP_DISPLAY_TRANSITION_DURATION = 250\r\n\r\nfunction SideBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n    let display = useSelector(state => state.desktop.display);\r\n    const dispatch = useDispatch();\r\n\r\n    let displayBtnCSS = {\r\n        color: \"white\",\r\n        transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`,\r\n        height: `calc(0.13 * (${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px))`\r\n    };\r\n\r\n    let notDisplayBtnCSS = {\r\n        color: \"#424242\",\r\n        transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`,\r\n        height: `calc(0.13 * (${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px))`\r\n    };\r\n\r\n    let sidebarCSS = {\r\n        display: `${modeIsMobile ? \"none\" : \"block\"}`,\r\n        height: `calc(${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n        width: `${SIDE_BAR_WIDTH}px`\r\n    }\r\n\r\n    return (\r\n        <div id=\"side-bar\" className=\"row full-height justify-content-center align-items-center\" style={sidebarCSS}>\r\n            <div className=\"col-12 nav-bar-btn\" onClick={() => dispatch(setDisplay(ACCOUNT_CONTENT))}>\r\n                <FontAwesomeIcon icon={faUserSecret} size=\"lg\" style={display == ACCOUNT_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n            </div>\r\n            <div className=\"col-12 nav-bar-btn\" onClick={() => dispatch(setDisplay(PERSONAL_CONTENT))}>\r\n                <FontAwesomeIcon icon={faPenSquare} size=\"lg\" style={display == PERSONAL_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","const NO_SWIPE_CARD = \"NO_SWIPE_CARD\";\r\nconst NEW_SWIPE_CARD = \"NEW_SWIPE_CARD\";\r\nconst NEW_PERCENT_RIGHT = \"NEW_PERCENT_RIGHT\";\r\n\r\nexport const noSwipeCard = () => ({\r\n    type: NO_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newSwipeCard = () => ({\r\n    type: NEW_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newPercentRight = (percent) => ({\r\n    type: NEW_PERCENT_RIGHT,\r\n    payload: {\r\n        percent: percent\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    hasSwipeCard: true,\r\n    percentRight: 1\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NO_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: false };\r\n        case NEW_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: true };\r\n        case NEW_PERCENT_RIGHT:\r\n            return { ...state, percentRight: action.payload.percent };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { noSwipeCard } from \"../redux/ducks/swipe\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { text, immobile, boundPos, color } = props;\r\n\r\n    let exist = useRef(true);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0, timeStamp: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [latestVel, setLatestVel] = useState(0);\r\n    const [swipeAngle, setSwipeAngle] = useState({ theta: 0, direction: 1 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const [swiped, setSwiped] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const VELOCITY_THRESHOLD = 1;\r\n    const SWIPE_ANGLE_MAX = 3 * Math.PI / 8;\r\n    const TIME_BETWEEN_SWIPES = 500;\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    let stateWindowHeight = useSelector(state => state.windowConfig.windowHeight);\r\n\r\n    let swipedColor = \"#990000\";\r\n    if (swipeAngle.direction == 1) {\r\n        swipedColor = \"#011F5b\";\r\n    }\r\n\r\n    let rotateDirection = 1;\r\n    let distReturnFromBorder = returnPos.x - boundPos.x;\r\n\r\n    let swipeCardCSS = {\r\n        width: `${windowWidth < windowHeight ? \"85vw\" : 0.5 * stateWindowHeight + \"px\"}`,\r\n        height: `${windowWidth < windowHeight ? 0.7 * stateWindowHeight + \"px\" : 0.75 * stateWindowHeight + \"px\"}`,\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`,\r\n        opacity: `${swiped ? 0 : 1}`,\r\n        background: `${swiped ? swipedColor : \"\"}`,\r\n        transform: `rotate(${rotateDirection * (position.x - returnPos.x) / distReturnFromBorder * (distReturnFromBorder >= 0.1 * boundPos.width ? 7 : 0.5)}deg)`,\r\n        transitionDuration: `${swiped ? TIME_BETWEEN_SWIPES + \"ms\" : \"\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n            console.log(\"cleanup: \" + text);\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.clientX;\r\n                let clientY = e.clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.touches[0].clientX;\r\n                let clientY = e.touches[0].clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        if (!swiped) {\r\n            setDragging(false);\r\n\r\n            if (latestVel > VELOCITY_THRESHOLD && Math.abs(swipeAngle.theta) < SWIPE_ANGLE_MAX) {\r\n                let factor = window.innerWidth / 5;\r\n                let ratio = Math.tan(swipeAngle.theta);\r\n                let sign = swipeAngle.direction;\r\n\r\n                let swipedAway = {\r\n                    x: sign * factor + position.x,\r\n                    y: sign * factor * ratio + position.y\r\n                };\r\n\r\n                setSwiped(true);\r\n                setPosition(swipedAway);\r\n                setTimeout(() => {\r\n                    dispatch(noSwipeCard());\r\n                }, TIME_BETWEEN_SWIPES);\r\n            } else {\r\n                setPosition(returnPos);\r\n            }\r\n        }\r\n    }\r\n\r\n    const velGen = (dx, dy, dt) => {\r\n        let v = (Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))) / dt;\r\n        let theta = Math.atan(dy / dx);\r\n        let direction = 1;\r\n\r\n        if (dx < 0) {\r\n            direction = -1;\r\n        }\r\n\r\n        setSwipeAngle({ theta, direction });\r\n        setLatestVel(v);\r\n        return v;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {immobile ? <div ref={swipeCardRef} className={\"no-select swipe-card swipe-card-return\"} style={swipeCardCSS}>\r\n                <div className=\"swipe-card-content\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    <div>\r\n                        {text} (immobile)\r\n                    </div>\r\n                </div>\r\n            </div> : <div ref={swipeCardRef} className={`no-select swipe-card ${swiped ? \"swipe-card-swiped\" : \"\"} ${!dragging && !swiped ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleEndDrag}\r\n                onMouseOut={handleEndDrag}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleEndDrag}\r\n                onTouchMove={handleTouchMove}>\r\n                <div className=\"swipe-card-content\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    <div>\r\n                        {text}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newPercentRight, newSwipeCard } from \"../redux/ducks/swipe\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {}\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let [index, setIndex] = useState(0);\r\n    let hasSwipeCard = useSelector(state => state.swipe.hasSwipeCard);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!hasSwipeCard) {\r\n            setIndex(index + 1);\r\n            console.log(\"new\");\r\n            dispatch(newSwipeCard());\r\n            dispatch(newPercentRight(currObj.percentRight));\r\n        }\r\n    }, [hasSwipeCard]);\r\n\r\n    const testArr = [{ text: \"hello 1 testArr\", percentRight: 0 }, { text: \"hello 2 testArr\", percentRight: 0.75 }, { text: \"hello 3 testArr\", percentRight: 0 }, { text: \"hello 4 testArr\", percentRight: 1 }];\r\n\r\n    let currObj = testArr[index];\r\n    let nextObj = testArr[index + 1];\r\n\r\n    const emptyObj = {\r\n        text: \"NO NEW CONTENT\",\r\n        percentRight: Math.random()\r\n    };\r\n\r\n    if (currObj === undefined) {\r\n        currObj = emptyObj;\r\n    }\r\n\r\n    if (nextObj === undefined) {\r\n        nextObj = emptyObj;\r\n    }\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard immobile={true} boundPos={position} color=\"#000000\" text={nextObj.text} />\r\n                    {hasSwipeCard ? <SwipeCard immobile={false} boundPos={position} color=\"#000000\" text={currObj.text} /> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT } from \"../redux/ducks/desktop\";\r\nimport AccountContent from \"./AccountContent\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport { DESKTOP_DISPLAY_TRANSITION_DURATION, SIDE_BAR_WIDTH } from \"./SideBar\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n  let display = useSelector(state => state.desktop.display);\r\n\r\n  let desktopCSS = {\r\n    width: `calc(100vw - ${modeIsMobile ? 0 : SIDE_BAR_WIDTH}px)`\r\n  }\r\n\r\n  let displaysCSS = {\r\n    transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`\r\n  }\r\n\r\n  let displayValues = {};\r\n\r\n  switch (display) {\r\n    case ACCOUNT_CONTENT:\r\n      displayValues = {\r\n        accountContent: 0,\r\n        personalContent: 100\r\n      };\r\n      break;\r\n    case PERSONAL_CONTENT:\r\n      displayValues = {\r\n        accountContent: -100,\r\n        personalContent: 0\r\n      };\r\n      break;\r\n    default:\r\n      displayValues = {\r\n        accountContent: -100,\r\n        personalContent: 0\r\n      };\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\" style={{ paddingLeft: 0 }}>\r\n        <AccountContent style={{ ...displaysCSS, top: `${displayValues.accountContent}%` }} />\r\n        <PersonalContent style={{ ...displaysCSS, top: `${displayValues.personalContent}%` }} />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SwipeContent from \"./SwipeContent\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT, SWIPE_CONTENT } from \"../redux/ducks/mobile\";\r\nimport { MOBILE_DISPLAY_TRANSITION_DURATION } from \"./NavBar\";\r\nimport AccountContent from \"./AccountContent\";\r\n\r\nfunction Mobile() {\r\n  let display = useSelector(state => state.mobile.display);\r\n\r\n  let mobileCSS = {\r\n  }\r\n\r\n  let displaysCSS = {\r\n    transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n  }\r\n\r\n  let displayValues = {};\r\n\r\n  switch (display) {\r\n    case SWIPE_CONTENT:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100,\r\n        accountContent: -100\r\n      };\r\n      break;\r\n    case PERSONAL_CONTENT:\r\n      displayValues = {\r\n        swipeContent: -100,\r\n        personalContent: 0,\r\n        accountContent: -200\r\n      };\r\n      break;\r\n    case ACCOUNT_CONTENT:\r\n      displayValues = {\r\n        swipeContent: 100,\r\n        personalContent: 200,\r\n        accountContent: 0\r\n      };\r\n      break;\r\n    default:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100,\r\n        accountContent: -100\r\n      };\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={mobileCSS}>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.accountContent}%` }}>\r\n        <AccountContent />\r\n      </div>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.swipeContent}%` }}>\r\n        <SwipeContent />\r\n      </div>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.personalContent}%` }}>\r\n        <PersonalContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport SideBar from \"./SideBar\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { SIDE_BAR_WIDTH } from \"./SideBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n  let windowHeight = useSelector(state => state.windowConfig.windowHeight);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(${windowHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        {modeIsMobile ?\r\n          <div className=\"col-12 full-height\">\r\n            <Mobile />\r\n          </div> :\r\n          <div className=\"col-12 full-height d-flex\">\r\n            <SideBar />\r\n            <Desktop />\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","const SET_WINDOW_HEIGHT = \"SET_WINDOW_HEIGHT\";\r\n\r\nexport const setWindowHeight = (windowHeight) => ({\r\n    type: SET_WINDOW_HEIGHT,\r\n    payload: {\r\n        windowHeight\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    windowHeight: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WINDOW_HEIGHT:\r\n            return { ...state, windowHeight: action.payload.windowHeight };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\nimport swipeReducer from \"./ducks/swipe\";\r\nimport mobileReducer from \"./ducks/mobile\";\r\nimport windowConfigReducer from \"./ducks/window-config\";\r\nimport desktopReducer from \"./ducks/desktop\";\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer,\r\n    swipe: swipeReducer,\r\n    mobile: mobileReducer,\r\n    windowConfig: windowConfigReducer,\r\n    desktop: desktopReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\nimport { setWindowHeight } from \"../redux/ducks/window-config\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateConfigs();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateConfigs();\r\n    });\r\n}\r\n\r\nlet updateConfigs = () => {\r\n    let windowWidth = window.innerWidth;\r\n    let windowHeight = window.innerHeight;\r\n\r\n    store.dispatch(setWindowHeight(windowHeight));\r\n\r\n    // if ((windowWidth < 992) && (windowWidth < windowHeight)) {\r\n    //     store.dispatch(setMobile());\r\n    // } else {\r\n    //     store.dispatch(setDesktop());\r\n    // }\r\n\r\n    if ((windowWidth >= 992) && (windowWidth > windowHeight)) {\r\n        store.dispatch(setDesktop());\r\n    } else {\r\n        store.dispatch(setMobile());\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}