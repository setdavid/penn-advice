{"version":3,"sources":["Components/TitleBar.jsx","redux/ducks/desktop.js","Components/AccountContent.jsx","Components/PersonalCard.jsx","redux/ducks/swipe.js","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/PersonalContent.jsx","redux/ducks/mobile.js","Components/NavBar.jsx","Components/SideBar.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/MainContent.jsx","App.js","reportWebVitals.js","redux/ducks/mode.js","redux/ducks/window-config.js","redux/configureStore.js","js/utils.js","index.js"],"names":["TitleBar","percentRight","useSelector","state","swipe","percentLeft","titleBarCSS","height","id","className","style","minHeight","paddingTop","fontSize","lineHeight","width","minWidth","backgroundColor","borderRight","borderLeft","SET_DISPLAY_DESKTOP","ACCOUNT_CONTENT","PERSONAL_CONTENT","setDisplayDesktop","display","type","payload","initialState","reducer","action","AccountContent","props","PersonalCard","infoObj","index","text","count","NO_SWIPE_CARD","NEW_SWIPE_CARD","NEW_PERCENT_RIGHT","hasSwipeCard","percent","SwipeCard","immobile","boundPos","color","exist","useRef","useState","x","y","position","setPosition","timeStamp","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","latestVel","setLatestVel","theta","direction","swipeAngle","setSwipeAngle","isInitial","setIsInitial","swiped","setSwiped","dispatch","useDispatch","SWIPE_ANGLE_MAX","Math","PI","windowWidth","window","innerWidth","windowHeight","innerHeight","stateWindowHeight","windowConfig","swipedColor","distReturnFromBorder","swipeCardCSS","left","top","opacity","background","transform","transitionDuration","TIME_BETWEEN_SWIPES","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","addEventListener","removeEventListener","console","log","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","abs","factor","ratio","tan","sign","swipedAway","velGen","dx","dy","dt","v","sqrt","pow","atan","actualContent","marginTop","marginBottom","fontWeight","Fragment","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","testArr","SwipeContent","swipeContentRef","setIndex","currObj","nextObj","emptyObj","random","undefined","PersonalContent","SET_DISPLAY_MOBILE","SWIPE_CONTENT","setDisplayMobile","NavBar","modeIsMobile","mode","mobile","displayBtnCSS","notDisplayBtnCSS","navbarCSS","onClick","icon","faUserSecret","size","faClone","faPenSquare","SideBar","desktop","sidebarCSS","Desktop","desktopCSS","displaysCSS","displayValues","accountContent","personalContent","paddingLeft","Mobile","swipeContent","MainContent","mainContentCSS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_MOBILE","SET_DESKTOP","SET_WINDOW_HEIGHT","combineReducers","modeReducer","swipeReducer","mobileReducer","windowConfigReducer","desktopReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","initializeEventListeners","updateConfigs","setWindowHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAkCeA,MA7Bf,WACE,IAAIC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,gBAChDI,EAAmC,KAApB,EAAIJ,GACvBA,GAAgB,IAEhB,IAAIK,EAAc,CAChBC,OAAO,GAAD,OARoB,GAQpB,OAGR,OACE,sBAAKC,GAAG,YAAYC,UAAU,kBAAkBC,MAAOJ,EAAvD,UACE,qBAAKG,UAAU,aAAaC,MAAO,CAAEH,OAAQ,MAAOI,UAAW,MAAOC,WAAY,OAAlF,SACE,sBAAKH,UAAU,SAASC,MAAO,CAAEG,SAAU,SAAUC,WAAY,KAAjE,UACE,6CAGA,qBAAKJ,MAAO,CAAEG,SAAU,WAAxB,0CAKJ,sBAAKJ,UAAU,MAAMC,MAAO,CAAEH,OAAQ,MAAOI,UAAW,OAAxD,UACE,qBAAKF,UAAU,cAAcC,MAAO,CAAEK,MAAM,GAAD,OAAKV,EAAL,KAAqBW,SAAS,GAAD,OAAKX,EAAL,KAAqBY,gBAAiB,UAAWC,YAAY,GAAD,OAAKb,EAAc,EAAI,kBAAoB,OAC/K,qBAAKI,UAAU,cAAcC,MAAO,CAAEK,MAAM,GAAD,OAAKd,EAAL,KAAsBe,SAAS,GAAD,OAAKf,EAAL,KAAsBgB,gBAAiB,UAAWE,WAAW,GAAD,OAAKlB,EAAe,EAAI,kBAAoB,c,OC5BnLmB,EAAsB,sBACfC,EAAkB,kBAClBC,EAAmB,mBAEnBC,EAAoB,SAACC,GAAD,MAAc,CAC3CC,KAAML,EACNM,QAAS,CACLF,aAIFG,EAAe,CACjBH,QAASF,GAYEM,EATC,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOJ,OACNL,EACM,2BAAKjB,GAAZ,IAAmBqB,QAASK,EAAOH,QAAQF,UAEpCrB,GCPJ2B,MAXf,SAAwBC,GACpB,IAAMrB,EAAUqB,EAAVrB,MAGN,OACI,qBAAKF,GAAG,kBAAkBC,UAAU,cAAcC,MAAK,2BAAOA,GAH1C,IAGpB,8BC6BOsB,MAlCf,SAAsBD,GAClB,IAAME,EAAYF,EAAZE,QAGFhC,EAAe,IAAMgC,EAAQhC,aAC7BI,EAAc,KAAO,EAAI4B,EAAQhC,cAErC,OACI,sBAAKQ,UAAU,gBAAgBC,MANb,GAMlB,UACI,qBAAKD,UAAU,sBAAf,mBACQwB,EAAQR,KADhB,aACyBQ,EAAQC,SAEjC,8BACKD,EAAQE,OAEb,qBAAK1B,UAAU,sBAAf,mBACQwB,EAAQG,MADhB,cAGA,sBAAK3B,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAcC,MAAO,CAAEK,MAAM,GAAD,OAAKV,EAAL,KAAqBW,SAAS,GAAD,OAAKX,EAAL,KAAqBY,gBAAiB,UAAWC,YAAY,GAAD,OAAKb,EAAc,EAAI,kBAAoB,OAC/K,qBAAKI,UAAU,cAAcC,MAAO,CAAEK,MAAM,GAAD,OAAKd,EAAL,KAAsBe,SAAS,GAAD,OAAKf,EAAL,KAAsBgB,gBAAiB,UAAWE,WAAW,GAAD,OAAKlB,EAAe,EAAI,kBAAoB,UAErL,sBAAKQ,UAAU,iCAAf,UACI,wCACQJ,EADR,OAGA,wCACQJ,EADR,c,OC5BVoC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAoB,oBAuBpBZ,EAAe,CACjBa,cAAc,EACdvC,aAAc,GAgBH2B,EAbC,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOJ,MACX,KAAKY,EACD,OAAO,2BAAKlC,GAAZ,IAAmBqC,cAAc,IACrC,KAAKF,EACD,OAAO,2BAAKnC,GAAZ,IAAmBqC,cAAc,IACrC,KAAKD,EACD,OAAO,2BAAKpC,GAAZ,IAAmBF,aAAc4B,EAAOH,QAAQe,UACpD,QACI,OAAOtC,ICsMJuC,MAzOf,SAAmBX,GACf,IAAME,EAAuCF,EAAvCE,QAASU,EAA8BZ,EAA9BY,SAAUC,EAAoBb,EAApBa,SAAUC,EAAUd,EAAVc,MAE/BC,EAAQC,kBAAO,GACnB,EAAgCC,mBAAS,CAAEC,EAAG,EAAGC,EAAG,IAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,CAAEC,EAAG,EAAGC,EAAG,EAAGG,UAAW,IAAtE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCP,oBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,mBAAS,CAAEC,EAAG,EAAGC,EAAG,IAAtD,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAkCX,mBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAoCb,mBAAS,CAAEc,MAAO,EAAGC,UAAW,IAApE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCjB,oBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA4BnB,oBAAS,GAArC,mBAAOoB,EAAP,KAAeC,EAAf,KAEIC,EAAWC,cAGTC,EAAkB,EAAIC,KAAKC,GAAK,EAEhCC,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAExBC,EAAoB9E,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,aAAaH,gBAE5DI,EAAc,UACU,GAAxBlB,EAAWD,YACXmB,EAAc,WAGlB,IACIC,EAAuBzB,EAAUT,EAAIL,EAASK,EAE9CmC,EAAe,CACfrE,MAAM,GAAD,OAAK4D,EAAcG,EAAe,OAAS,GAAME,EAAoB,MAC1EzE,OAAO,GAAD,OAAKoE,EAAcG,EAAe,GAAME,EAAoB,KAAO,IAAOA,EAAoB,MACpGK,KAAK,GAAD,OAAKnB,EAAY,OAASf,EAASF,EAAIL,EAASK,EAAI,MACxDqC,IAAI,GAAD,OAAKpB,EAAY,OAASf,EAASD,EAAIN,EAASM,EAAI,MACvDqC,QAAQ,GAAD,OAAKnB,EAAS,EAAI,GACzBoB,WAAW,GAAD,OAAKpB,EAASc,EAAc,IACtCO,UAAU,UAAD,OAVS,GAUsBtC,EAASF,EAAIS,EAAUT,GAAKkC,GAAwBA,GAAwB,GAAMvC,EAAS7B,MAAQ,EAAI,IAAtI,QACT2E,mBAAmB,GAAD,OAAKtB,EAASuB,QAA6B,KAG7DC,EAAQ7C,iBAAO,GAMf8C,EAAc,WALH,IAACC,IAMH,SAAChD,GACFA,EAAMiD,SACN5B,GAAa,IAPrB6B,aAAaJ,EAAMG,SACnBH,EAAMG,QAAUE,WAAWH,EAAU,GAAIhD,IAW7CoD,qBAAU,WAGN,OAFAtB,OAAOuB,iBAAiB,SAAUN,GAE3B,WACHjB,OAAOwB,oBAAoB,SAAUP,GACrC/C,EAAMiD,SAAU,EAChBM,QAAQC,IAAI,YAAcrE,EAAQE,SAEvC,IAEH,IAAIoE,GAAexD,mBACbyD,GAAkB,WACpB,IAAIC,EAAiBF,GAAaR,QAAQW,wBAC1C/C,EAAa8C,GACbrD,EAAYqD,IA6FVE,GAAgB,SAACC,GACnB,IAAKxC,EAGD,GAFAX,GAAY,GAERG,EAxJe,GAwJmBa,KAAKoC,IAAI7C,EAAWF,OAASU,EAAiB,CAChF,IAAIsC,EAASlC,OAAOC,WAAa,EAC7BkC,EAAQtC,KAAKuC,IAAIhD,EAAWF,OAC5BmD,EAAOjD,EAAWD,UAElBmD,EAAa,CACbjE,EAAGgE,EAAOH,EAAS3D,EAASF,EAC5BC,EAAG+D,EAAOH,EAASC,EAAQ5D,EAASD,GAGxCmB,GAAU,GACVjB,EAAY8D,GACZjB,YAAW,WACP3B,EDpLc,CAC9B7C,KAAMY,EACNX,QAAS,OCemB,UAsKhB0B,EAAYM,IAKlByD,GAAS,SAACC,EAAIC,EAAIC,GACpB,IAAIC,EAAK9C,KAAK+C,KAAK/C,KAAKgD,IAAIL,EAAI,GAAK3C,KAAKgD,IAAIJ,EAAI,IAAOC,EACrDxD,EAAQW,KAAKiD,KAAKL,EAAKD,GACvBrD,EAAY,EAQhB,OANIqD,EAAK,IACLrD,GAAa,GAGjBE,EAAc,CAAEH,QAAOC,cACvBF,EAAa0D,GACNA,GAGLI,GAAgB,sBAAKlH,UAAU,4BAA4BC,MAAO,CAAEkH,UAAU,GAAD,OAAK,GAAM5C,EAAX,MAAkC6C,aAAa,GAAD,OAAK,GAAM7C,EAAX,OAA3G,UAClB,qBAAKtE,MAAO,CAAEG,SAAU,OAAQiH,WAAY,OAAQD,aAAc,QAAlE,mBACQ5F,EAAQR,KADhB,aACyBQ,EAAQC,SAEjC,8BACKD,EAAQE,UAIjB,OACI,cAAC,IAAM4F,SAAP,UACKpF,EAAW,qBAAKqF,IAAKzB,GAAc9F,UAAW,yCAA0CC,MAAO0E,EAApF,SACR,qBAAK3E,UAAU,4BAA4BC,MAAO,CAAEO,gBAAgB,GAAD,OAAKmD,EAASc,EAAcrC,IAA/F,SACK8E,OAEA,qBAAKK,IAAKzB,GAAc9F,UAAS,+BAA0B2D,EAAS,oBAAsB,GAAzD,YAAgEZ,GAAaY,EAA+B,GAAtB,qBAA4B1D,MAAO0E,EAC/J6C,YAjJY,SAACrB,GACrB,IAAKxC,EAAQ,CACT,IAAI8D,EAAS,CACTjF,EAAG2D,EAAEuB,QACLjF,EAAG0D,EAAEwB,QACL/E,UAAWuD,EAAEvD,WAGba,IACAsC,KACArC,GAAa,IAGjBV,GAAY,GACZF,EAAc2E,KAoIVG,UAAW1B,GACX2B,WAAY3B,GACZ4B,YAlIY,SAAC3B,GACrB,IAAKxC,GACGZ,EAAU,CACV,IAAI2E,EAAUvB,EAAEuB,QACZC,EAAUxB,EAAEwB,QAEZhB,EAAKe,EAAU7E,EAAWL,EAC1BoE,EAAKe,EAAU9E,EAAWJ,EAE1BsF,EAAc,CACdvF,EAAGE,EAASF,EAAImE,EAChBlE,EAAGC,EAASD,EAAImE,GAGhBa,EAAS,CACTjF,EAAGkF,EACHjF,EAAGkF,EACH/E,UAAWuD,EAAEvD,WAGjB8D,GAAOC,EAAIC,EAAIT,EAAEvD,UAAYC,EAAWD,WACxCD,EAAYoF,GACZjF,EAAc2E,KA6GdO,aAxGa,SAAC7B,GACtB,IAAKxC,EAAQ,CACT,IAAI8D,EAAS,CACTjF,EAAG2D,EAAE8B,QAAQ,GAAGP,QAChBjF,EAAG0D,EAAE8B,QAAQ,GAAGN,QAChB/E,UAAWuD,EAAEvD,WAGba,IACAsC,KACArC,GAAa,IAGjBV,GAAY,GACZF,EAAc2E,KA2FVS,WAAYhC,GACZiC,YAxFY,SAAChC,GACrB,IAAKxC,GACGZ,EAAU,CACV,IAAI2E,EAAUvB,EAAE8B,QAAQ,GAAGP,QACvBC,EAAUxB,EAAE8B,QAAQ,GAAGN,QAEvBhB,EAAKe,EAAU7E,EAAWL,EAC1BoE,EAAKe,EAAU9E,EAAWJ,EAE1BsF,EAAc,CACdvF,EAAGE,EAASF,EAAImE,EAChBlE,EAAGC,EAASD,EAAImE,GAGhBa,EAAS,CACTjF,EAAGkF,EACHjF,EAAGkF,EACH/E,UAAWuD,EAAEvD,WAGjB8D,GAAOC,EAAIC,EAAIT,EAAEvD,UAAYC,EAAWD,WACxCD,EAAYoF,GACZjF,EAAc2E,KA2DT,SAQL,qBAAKzH,UAAU,4BAA4BC,MAAO,CAAEO,gBAAgB,GAAD,OAAKmD,EAASc,EAAcrC,IAA/F,SACK8E,UCjORkB,EAAU,CAAC,CAAEpH,KAAM,YAAaS,MAAO,EAAGC,KAAM,kBAAmBC,MAAO,IAAKnC,aAAc,GAC1G,CAAEwB,KAAM,YAAaS,MAAO,EAAGC,KAAM,sxBAAuxBC,MAAO,GAAInC,aAAc,KACr1B,CAAEwB,KAAM,YAAaS,MAAO,EAAGC,KAAM,kBAAmBC,MAAO,GAAInC,aAAc,GACjF,CAAEwB,KAAM,YAAaS,MAAO,EAAGC,KAAM,sxBAAuxBC,MAAO,GAAInC,aAAc,IA4Et0B6I,MA1Ef,WACI,IAAIhG,EAAQC,kBAAO,GACfgG,EAAkBhG,mBACtB,EAA8BC,mBAAS,CAAEC,EAAG,EAAGC,EAAG,IAAlD,mBAAKC,EAAL,KAAeC,EAAf,KAIIwC,EAAQ7C,iBAAO,GAMf8C,EAAc,WALH,IAACC,IAMH,SAAChD,GACFA,EAAMiD,SACN3C,EAAY2F,EAAgBhD,QAAQW,0BAP5CV,aAAaJ,EAAMG,SACnBH,EAAMG,QAAUE,WAAWH,EAAU,GAAIhD,IAW7CoD,qBAAU,WAIN,OAHAtB,OAAOuB,iBAAiB,SAAUN,GAClCzC,EAAY2F,EAAgBhD,QAAQW,yBAE7B,WACH9B,OAAOwB,oBAAoB,SAAUP,GACrC/C,EAAMiD,SAAU,KAErB,IAEH,MAAwB/C,mBAAS,GAAjC,mBAAKd,EAAL,KAAY8G,EAAZ,KACIxG,EAAetC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoC,gBAChD8B,EAAWC,cAEf2B,qBAAU,WF3BiB,IAACzD,EE4BnBD,IACDwG,EAAS9G,EAAQ,GACjBmE,QAAQC,IAAI,OACZhC,EFtCuB,CAC/B7C,KAAMa,EACNZ,QAAS,KEqCD4C,GFhCoB7B,EEgCKwG,EAAQhJ,aFhCA,CACzCwB,KAAMc,EACNb,QAAS,CACLe,QAASA,SE+BV,CAACD,IAEJ,IAAIyG,EAAUJ,EAAQ3G,GAClBgH,EAAUL,EAAQ3G,EAAQ,GAExBiH,EAAW,CACb1H,KAAM,YACNS,MAAO,IACPC,KAAM,0CACNlC,aAAcwE,KAAK2E,UAWvB,YARgBC,IAAZJ,IACAA,EAAUE,QAGEE,IAAZH,IACAA,EAAUC,GAIV,qBAAKnB,IAAKe,EAAiBvI,GAAG,gBAAgBC,UAAU,8BAA8BC,MA1DpE,GA0DlB,SACI,qBAAKD,UAAU,kBAAf,SACI,sBAAKA,UAAU,sEAAf,UACI,cAAC,EAAD,CAAWkC,UAAU,EAAMC,SAAUO,EAAUN,MAAM,UAAUZ,QAASiH,IACvE1G,EAAe,cAAC,EAAD,CAAWG,UAAU,EAAOC,SAAUO,EAAUN,MAAM,UAAUZ,QAASgH,IAAc,WCvD5GK,MAjBf,SAAyBvH,GACrB,IAAMrB,EAAUqB,EAAVrB,MAGN,OACI,sBAAKF,GAAG,mBAAmBC,UAAU,cAAcC,MAAK,2BAAOA,GAH1C,IAGrB,UACI,qBAAKF,GAAG,0BAAR,8BAGA,cAAC,EAAD,CAAcyB,QAAS4G,EAAQ,KAC/B,cAAC,EAAD,CAAc5G,QAAS4G,EAAQ,KAC/B,cAAC,EAAD,CAAc5G,QAAS4G,EAAQ,KAC/B,cAAC,EAAD,CAAc5G,QAAS4G,EAAQ,S,cCjBrCU,EAAqB,qBACdC,EAAgB,gBAChBlI,EAAmB,mBACnBD,EAAkB,kBAElBoI,EAAmB,SAACjI,GAAD,MAAc,CAC1CC,KAAM8H,EACN7H,QAAS,CACLF,aAIFG,EAAe,CACjBH,QAASgI,GAYE5H,EATC,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOJ,OACN8H,EACM,2BAAKpJ,GAAZ,IAAmBqB,QAASK,EAAOH,QAAQF,UAEpCrB,GCyBJuJ,MArCf,WACI,IAAIC,EAAezJ,aAAY,SAAAC,GAAK,OAAIA,EAAMyJ,KAAKD,gBAC/CnI,EAAUtB,aAAY,SAAAC,GAAK,OAAIA,EAAM0J,OAAOrI,WAC1C8C,EAAWC,cAEbuF,EAAgB,CAChBjH,MAAO,QACP6C,mBAAmB,GAAD,OATsB,IAStB,OAGlBqE,EAAmB,CACnBlH,MAAO,uBACP6C,mBAAmB,GAAD,OAdsB,IActB,OAGlBsE,EAAY,CACZxI,QAAQ,GAAD,OAAKmI,EAAe,QAAU,QACrCpJ,OAAO,GAAD,OApBc,GAoBd,OAGV,OACI,qBAAKC,GAAG,UAAUC,UAAU,kBAAkBC,MAAOsJ,EAArD,SACI,sBAAKvJ,UAAU,kBAAf,UACI,qBAAKA,UAAU,gCAAgCwJ,QAAS,kBAAM3F,EAASmF,EAAiBpI,KAAxF,SACI,cAAC,IAAD,CAAiB6I,KAAMC,IAAcC,KAAK,KAAK1J,MAAOc,GAAWH,EAAkByI,EAAgBC,MAEvG,qBAAKtJ,UAAU,gCAAgCwJ,QAAS,kBAAM3F,EAASmF,EAAiBD,KAAxF,SACI,cAAC,IAAD,CAAiBU,KAAMG,IAASD,KAAK,KAAK1J,MAAOc,GAAWgI,EAAgBM,EAAgBC,MAEhG,qBAAKtJ,UAAU,gCAAgCwJ,QAAS,kBAAM3F,EAASmF,EAAiBnI,KAAxF,SACI,cAAC,IAAD,CAAiB4I,KAAMI,IAAaF,KAAK,KAAK1J,MAAOc,GAAWF,EAAmBwI,EAAgBC,YCOxGQ,MAnCf,WACI,IAAIZ,EAAezJ,aAAY,SAAAC,GAAK,OAAIA,EAAMyJ,KAAKD,gBAC/CnI,EAAUtB,aAAY,SAAAC,GAAK,OAAIA,EAAMqK,QAAQhJ,WAC3C8C,EAAWC,cAEbuF,EAAgB,CAChBjH,MAAO,QACP6C,mBAAmB,GAAD,OATuB,IASvB,MAClBnF,OAAO,gBAAD,OAAkBqE,OAAOG,YAAzB,gBVhBgB,GUgBhB,gBAAoE4E,EDbtD,GCasF,EAApG,SAGNI,EAAmB,CACnBlH,MAAO,uBACP6C,mBAAmB,GAAD,OAfuB,IAevB,MAClBnF,OAAO,gBAAD,OAAkBqE,OAAOG,YAAzB,gBVtBgB,GUsBhB,gBAAoE4E,EDnBtD,GCmBsF,EAApG,SAGNc,EAAa,CACbjJ,QAAQ,GAAD,OAAKmI,EAAe,OAAS,SACpCpJ,OAAO,QAAD,OAAUqE,OAAOG,YAAjB,gBV3BgB,GU2BhB,gBAA4D4E,EDxB9C,GCwB8E,EAA5F,OACN5I,MAAM,GAAD,OAvBe,GAuBf,OAGT,OACI,sBAAKP,GAAG,WAAWC,UAAU,4DAA4DC,MAAO+J,EAAhG,UACI,qBAAKhK,UAAU,qBAAqBwJ,QAAS,kBAAM3F,EAAS/C,EAAkBF,KAA9E,SACI,cAAC,IAAD,CAAiB6I,KAAMC,IAAcC,KAAK,KAAK1J,MAAOc,GAAWH,EAAkByI,EAAgBC,MAEvG,qBAAKtJ,UAAU,qBAAqBwJ,QAAS,kBAAM3F,EAAS/C,EAAkBD,KAA9E,SACI,cAAC,IAAD,CAAiB4I,KAAMI,IAAaF,KAAK,KAAK1J,MAAOc,GAAWF,EAAmBwI,EAAgBC,UCepGW,MA/Cf,WACE,IAAIf,EAAezJ,aAAY,SAAAC,GAAK,OAAIA,EAAMyJ,KAAKD,gBAC/CnI,EAAUtB,aAAY,SAAAC,GAAK,OAAIA,EAAMqK,QAAQhJ,WAE7CmJ,EAAa,CACf5J,MAAM,gBAAD,OAAkB4I,EAAe,EDLd,GCKnB,QAGHiB,EAAc,CAChBlF,mBAAmB,GAAD,ODR2B,ICQ3B,OAGhBmF,EAAgB,GAEpB,GAAQrJ,IACDH,EACHwJ,EAAgB,CACdC,eAAgB,EAChBC,gBAAiB,UAUnBF,EAAgB,CACdC,gBAAiB,IACjBC,gBAAiB,GAIvB,OACE,sBAAKvK,GAAG,kBAAkBC,UAAU,kBAAkBC,MAAOiK,EAA7D,UACE,sBAAKlK,UAAU,uBAAuBC,MAAO,CAAEsK,YAAa,GAA5D,UACE,cAAC,EAAD,CAAgBtK,MAAK,2BAAOkK,GAAP,IAAoBtF,IAAI,GAAD,OAAKuF,EAAcC,eAAnB,SAC5C,cAAC,EAAD,CAAiBpK,MAAK,2BAAOkK,GAAP,IAAoBtF,IAAI,GAAD,OAAKuF,EAAcE,gBAAnB,YAE/C,qBAAKtK,UAAU,uBAAf,SACE,cAAC,EAAD,UCgBOwK,MAzDf,WACE,IAAIzJ,EAAUtB,aAAY,SAAAC,GAAK,OAAIA,EAAM0J,OAAOrI,WAK5CoJ,EAAc,CAChBlF,mBAAmB,GAAD,OHR0B,IGQ1B,OAGhBmF,EAAgB,GAEpB,OAAQrJ,GAsBN,QACEqJ,EAAgB,CACdK,aAAc,EACdH,gBAAiB,IACjBD,gBAAiB,WAlBrB,KAAKxJ,EACHuJ,EAAgB,CACdK,cAAe,IACfH,gBAAiB,EACjBD,gBAAiB,KAEnB,MACF,KAAKzJ,EACHwJ,EAAgB,CACdK,aAAc,IACdH,gBAAiB,IACjBD,eAAgB,GAWtB,OACE,sBAAKtK,GAAG,iBAAiBC,UAAU,kBAAkBC,MAxCvC,GAwCd,UACE,qBAAKD,UAAU,qBAAqBC,MAAK,2BAAOkK,GAAP,IAAoBvF,KAAK,GAAD,OAAKwF,EAAcC,eAAnB,OAAjE,SACE,cAAC,EAAD,MAEF,qBAAKrK,UAAU,qBAAqBC,MAAK,2BAAOkK,GAAP,IAAoBvF,KAAK,GAAD,OAAKwF,EAAcK,aAAnB,OAAjE,SACE,cAAC,EAAD,MAEF,qBAAKzK,UAAU,qBAAqBC,MAAK,2BAAOkK,GAAP,IAAoBvF,KAAK,GAAD,OAAKwF,EAAcE,gBAAnB,OAAjE,SACE,cAAC,EAAD,UCzBOI,MAzBf,WACE,IAAIxB,EAAezJ,aAAY,SAAAC,GAAK,OAAIA,EAAMyJ,KAAKD,gBAC/C7E,EAAe5E,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,aAAaH,gBAEvDsG,EAAiB,CACnB7K,OAAO,QAAD,OAAUuE,EAAV,gBbXoB,GaWpB,gBAAsD6E,EJRpC,GIQoE,EAAtF,QAGR,OACE,qBAAKnJ,GAAG,eAAeC,UAAU,kBAAkBC,MAAO0K,EAA1D,SACE,qBAAK3K,UAAU,kBAAf,SACGkJ,EACC,qBAAKlJ,UAAU,qBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,4BAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCNG4K,MAbf,WACE,OACE,qBAAK5K,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCDO6K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAa,aACbC,EAAc,cAgBdrK,EAAe,CACjBgI,cAAc,GAcH/H,EAXC,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOJ,MACX,KAAKsK,EACD,OAAO,2BAAK5L,GAAZ,IAAmBwJ,cAAc,IACrC,KAAKqC,EACD,OAAO,2BAAK7L,GAAZ,IAAmBwJ,cAAc,IACrC,QACI,OAAOxJ,IC5Bb8L,EAAoB,oBASpBtK,EAAe,CACjBmD,aAAc,GAYHlD,EATC,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOJ,OACNwK,EACM,2BAAK9L,GAAZ,IAAmB2E,aAAcjD,EAAOH,QAAQoD,eAEzC3E,GCXbyB,EAAUsK,YAAgB,CAC5BtC,KAAMuC,EACN/L,MAAOgM,EACPvC,OAAQwC,EACRpH,aAAcqH,EACd9B,QAAS+B,IAKEC,GAFDC,YAAY7K,EAASgD,OAAO8H,8BAAgC9H,OAAO8H,gCCN7EC,GAA2B,WAC3B/H,OAAOuB,iBAAiB,UAAU,WAC9ByG,SAIJA,GAAgB,WAChB,IAAIjI,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAE1ByH,GAAMlI,SFjBqB,SAACQ,GAAD,MAAmB,CAC9CrD,KAAMwK,EACNvK,QAAS,CACLoD,iBEcW+H,CAAgB/H,IAQ1BH,GAAe,KAASA,EAAcG,EACvC0H,GAAMlI,SHlBmB,CAC7B7C,KAAMuK,EACNtK,QAAS,KGkBL8K,GAAMlI,SH3BiB,CAC3B7C,KAAMsK,EACNrK,QAAS,MIIboL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SDVtBP,KACAC,KCiBJtB,M","file":"static/js/main.e4ba8296.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let percentRight = useSelector(state => state.swipe.percentRight);\r\n  let percentLeft = (1 - percentRight) * 100;\r\n  percentRight *= 100;\r\n\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" className=\"container-fluid\" style={titleBarCSS}>\r\n      <div className=\"row d-flex\" style={{ height: \"90%\", minHeight: \"90%\", paddingTop: \"7px\" }}>\r\n        <div className=\"col-12\" style={{ fontSize: \"2.5rem\", lineHeight: \"1\" }}>\r\n          <div>\r\n            PennAdvice\r\n          </div>\r\n          <div style={{ fontSize: \"0.75rem\" }}>\r\n            &nbsp; by Penn Spark Gray\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"10%\", minHeight: \"10%\" }}>\r\n        <div className=\"percent-bar\" style={{ width: `${percentLeft}%`, minWidth: `${percentLeft}%`, backgroundColor: \"#990000\", borderRight: `${percentLeft > 0 ? \"2px solid white\" : \"\"}` }} />\r\n        <div className=\"percent-bar\" style={{ width: `${percentRight}%`, minWidth: `${percentRight}%`, backgroundColor: \"#011F5b\", borderLeft: `${percentRight > 0 ? \"2px solid white\" : \"\"}` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","const SET_DISPLAY_DESKTOP = \"SET_DISPLAY_DESKTOP\";\r\nexport const ACCOUNT_CONTENT = \"ACCOUNT_CONTENT\";\r\nexport const PERSONAL_CONTENT = \"PERSONAL_CONTENT\";\r\n\r\nexport const setDisplayDesktop = (display) => ({\r\n    type: SET_DISPLAY_DESKTOP,\r\n    payload: {\r\n        display\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    display: PERSONAL_CONTENT\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DISPLAY_DESKTOP:\r\n            return { ...state, display: action.payload.display };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\n\r\nfunction AccountContent(props) {\r\n    let { style } = props;\r\n    let accountContentCSS = {}\r\n\r\n    return (\r\n        <div id=\"account-content\" className=\"full-height\" style={{ ...style, ...accountContentCSS }}>\r\n            Account Content\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AccountContent;\r\n","import React from \"react\";\r\n\r\nfunction PersonalCard(props) {\r\n    let { infoObj } = props;\r\n    let personalCardCSS = {}\r\n\r\n    let percentRight = 100 * infoObj.percentRight;\r\n    let percentLeft = 100 * (1 - infoObj.percentRight);\r\n\r\n    return (\r\n        <div className=\"personal-card\" style={personalCardCSS}>\r\n            <div className=\"personal-card-title\">\r\n                {`${infoObj.type} #${infoObj.index}`}\r\n            </div>\r\n            <div>\r\n                {infoObj.text}\r\n            </div>\r\n            <div className=\"personal-card-count\" >\r\n                {`${infoObj.count} entries`}\r\n            </div>\r\n            <div className=\"personal-card-percent-bar\" >\r\n                <div className=\"percent-bar\" style={{ width: `${percentLeft}%`, minWidth: `${percentLeft}%`, backgroundColor: \"#990000\", borderRight: `${percentLeft > 0 ? \"2px solid white\" : \"\"}` }} />\r\n                <div className=\"percent-bar\" style={{ width: `${percentRight}%`, minWidth: `${percentRight}%`, backgroundColor: \"#011F5b\", borderLeft: `${percentRight > 0 ? \"2px solid white\" : \"\"}` }} />\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\" >\r\n                <div>\r\n                    {`${percentLeft}%`}\r\n                </div>\r\n                <div>\r\n                    {`${percentRight}%`}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalCard;\r\n","const NO_SWIPE_CARD = \"NO_SWIPE_CARD\";\r\nconst NEW_SWIPE_CARD = \"NEW_SWIPE_CARD\";\r\nconst NEW_PERCENT_RIGHT = \"NEW_PERCENT_RIGHT\";\r\n\r\nexport const noSwipeCard = () => ({\r\n    type: NO_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newSwipeCard = () => ({\r\n    type: NEW_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newPercentRight = (percent) => ({\r\n    type: NEW_PERCENT_RIGHT,\r\n    payload: {\r\n        percent: percent\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    hasSwipeCard: true,\r\n    percentRight: 1\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NO_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: false };\r\n        case NEW_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: true };\r\n        case NEW_PERCENT_RIGHT:\r\n            return { ...state, percentRight: action.payload.percent };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { noSwipeCard } from \"../redux/ducks/swipe\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { infoObj, immobile, boundPos, color } = props;\r\n\r\n    let exist = useRef(true);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0, timeStamp: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [latestVel, setLatestVel] = useState(0);\r\n    const [swipeAngle, setSwipeAngle] = useState({ theta: 0, direction: 1 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const [swiped, setSwiped] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const VELOCITY_THRESHOLD = 1;\r\n    const SWIPE_ANGLE_MAX = 3 * Math.PI / 8;\r\n    const TIME_BETWEEN_SWIPES = 500;\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    let stateWindowHeight = useSelector(state => state.windowConfig.windowHeight);\r\n\r\n    let swipedColor = \"#990000\";\r\n    if (swipeAngle.direction == 1) {\r\n        swipedColor = \"#011F5b\";\r\n    }\r\n\r\n    let rotateDirection = 1;\r\n    let distReturnFromBorder = returnPos.x - boundPos.x;\r\n\r\n    let swipeCardCSS = {\r\n        width: `${windowWidth < windowHeight ? \"85vw\" : 0.5 * stateWindowHeight + \"px\"}`,\r\n        height: `${windowWidth < windowHeight ? 0.7 * stateWindowHeight + \"px\" : 0.75 * stateWindowHeight + \"px\"}`,\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`,\r\n        opacity: `${swiped ? 0 : 1}`,\r\n        background: `${swiped ? swipedColor : \"\"}`,\r\n        transform: `rotate(${rotateDirection * (position.x - returnPos.x) / distReturnFromBorder * (distReturnFromBorder >= 0.1 * boundPos.width ? 7 : 0.5)}deg)`,\r\n        transitionDuration: `${swiped ? TIME_BETWEEN_SWIPES + \"ms\" : \"\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n            console.log(\"cleanup: \" + infoObj.text);\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.clientX;\r\n                let clientY = e.clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        if (!swiped) {\r\n            let center = {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            if (isInitial) {\r\n                updateReturnPos();\r\n                setIsInitial(false);\r\n            }\r\n\r\n            setDragging(true);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (!swiped) {\r\n            if (dragging) {\r\n                let clientX = e.touches[0].clientX;\r\n                let clientY = e.touches[0].clientY;\r\n\r\n                let dx = clientX - prevCenter.x;\r\n                let dy = clientY - prevCenter.y;\r\n\r\n                let newPosition = {\r\n                    x: position.x + dx,\r\n                    y: position.y + dy\r\n                }\r\n\r\n                let center = {\r\n                    x: clientX,\r\n                    y: clientY,\r\n                    timeStamp: e.timeStamp\r\n                }\r\n\r\n                velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n                setPosition(newPosition);\r\n                setPrevCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        if (!swiped) {\r\n            setDragging(false);\r\n\r\n            if (latestVel > VELOCITY_THRESHOLD && Math.abs(swipeAngle.theta) < SWIPE_ANGLE_MAX) {\r\n                let factor = window.innerWidth / 5;\r\n                let ratio = Math.tan(swipeAngle.theta);\r\n                let sign = swipeAngle.direction;\r\n\r\n                let swipedAway = {\r\n                    x: sign * factor + position.x,\r\n                    y: sign * factor * ratio + position.y\r\n                };\r\n\r\n                setSwiped(true);\r\n                setPosition(swipedAway);\r\n                setTimeout(() => {\r\n                    dispatch(noSwipeCard());\r\n                }, TIME_BETWEEN_SWIPES);\r\n            } else {\r\n                setPosition(returnPos);\r\n            }\r\n        }\r\n    }\r\n\r\n    const velGen = (dx, dy, dt) => {\r\n        let v = (Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))) / dt;\r\n        let theta = Math.atan(dy / dx);\r\n        let direction = 1;\r\n\r\n        if (dx < 0) {\r\n            direction = -1;\r\n        }\r\n\r\n        setSwipeAngle({ theta, direction });\r\n        setLatestVel(v);\r\n        return v;\r\n    }\r\n\r\n    const actualContent = <div className=\"swipe-card-actual-content\" style={{ marginTop: `${0.1 * stateWindowHeight}px`, marginBottom: `${0.1 * stateWindowHeight}px` }}>\r\n        <div style={{ fontSize: \"2rem\", fontWeight: \"bold\", marginBottom: \"10px\" }}>\r\n            {`${infoObj.type} #${infoObj.index}`}\r\n        </div>\r\n        <div>\r\n            {infoObj.text}\r\n        </div>\r\n    </div >\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {immobile ? <div ref={swipeCardRef} className={\"no-select swipe-card swipe-card-return\"} style={swipeCardCSS}>\r\n                <div className=\"swipe-card-content d-flex\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    {actualContent}\r\n                </div>\r\n            </div> : <div ref={swipeCardRef} className={`no-select swipe-card ${swiped ? \"swipe-card-swiped\" : \"\"} ${!dragging && !swiped ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleEndDrag}\r\n                onMouseOut={handleEndDrag}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleEndDrag}\r\n                onTouchMove={handleTouchMove}>\r\n                <div className=\"swipe-card-content d-flex\" style={{ backgroundColor: `${swiped ? swipedColor : color}` }}>\r\n                    {actualContent}\r\n                </div>\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newPercentRight, newSwipeCard } from \"../redux/ducks/swipe\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nexport const testArr = [{ type: \"Penn Life\", index: 0, text: \"hello 0 testArr\", count: 353, percentRight: 0 },\r\n{ type: \"Penn Life\", index: 1, text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at odio placerat, pulvinar felis et, sodales diam. Curabitur non libero aliquet, lacinia orci ut, iaculis ante. Aliquam lacinia commodo varius. Aliquam erat volutpat. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nam sapien sem, dictum quis vehicula ultricies, aliquet vitae risus. Nulla sit amet ex sed mi porttitor venenatis eget eget massa. Maecenas non tellus accumsan, semper quam vitae, aliquet massa. Nullam sit amet neque risus. Phasellus congue velit magna, sed posuere ex gravida ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus ut ornare lorem. Sed nec sem semper, ullamcorper leo sit amet, suscipit velit.\", count: 10, percentRight: 0.75 },\r\n{ type: \"Penn Life\", index: 2, text: \"hello 2 testArr\", count: 34, percentRight: 0 },\r\n{ type: \"Penn Life\", index: 3, text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at odio placerat, pulvinar felis et, sodales diam. Curabitur non libero aliquet, lacinia orci ut, iaculis ante. Aliquam lacinia commodo varius. Aliquam erat volutpat. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nam sapien sem, dictum quis vehicula ultricies, aliquet vitae risus. Nulla sit amet ex sed mi porttitor venenatis eget eget massa. Maecenas non tellus accumsan, semper quam vitae, aliquet massa. Nullam sit amet neque risus. Phasellus congue velit magna, sed posuere ex gravida ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus ut ornare lorem. Sed nec sem semper, ullamcorper leo sit amet, suscipit velit.\", count: 50, percentRight: 1 }];\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {}\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let [index, setIndex] = useState(0);\r\n    let hasSwipeCard = useSelector(state => state.swipe.hasSwipeCard);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!hasSwipeCard) {\r\n            setIndex(index + 1);\r\n            console.log(\"new\");\r\n            dispatch(newSwipeCard());\r\n            dispatch(newPercentRight(currObj.percentRight));\r\n        }\r\n    }, [hasSwipeCard]);\r\n\r\n    let currObj = testArr[index];\r\n    let nextObj = testArr[index + 1];\r\n\r\n    const emptyObj = {\r\n        type: \"Penn Life\",\r\n        index: \"?\",\r\n        text: \"NO NEW CONTENT (but swiping is fun :) )\",\r\n        percentRight: Math.random(),\r\n    };\r\n\r\n    if (currObj === undefined) {\r\n        currObj = emptyObj;\r\n    }\r\n\r\n    if (nextObj === undefined) {\r\n        nextObj = emptyObj;\r\n    }\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard immobile={true} boundPos={position} color=\"#000000\" infoObj={nextObj} />\r\n                    {hasSwipeCard ? <SwipeCard immobile={false} boundPos={position} color=\"#000000\" infoObj={currObj} /> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalCard from \"./PersonalCard\";\r\n\r\nimport { testArr } from \"./SwipeContent\";\r\n\r\nfunction PersonalContent(props) {\r\n    let { style } = props;\r\n    let personalContentCSS = {}\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={{ ...style, ...personalContentCSS }}>\r\n            <div id=\"personal-content-header\">\r\n                Personal Content\r\n            </div>\r\n            <PersonalCard infoObj={testArr[0]} />\r\n            <PersonalCard infoObj={testArr[1]} />\r\n            <PersonalCard infoObj={testArr[2]} />\r\n            <PersonalCard infoObj={testArr[3]} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","const SET_DISPLAY_MOBILE = \"SET_DISPLAY_MOBILE\";\r\nexport const SWIPE_CONTENT = \"SWIPE_CONTENT\";\r\nexport const PERSONAL_CONTENT = \"PERSONAL_CONTENT\";\r\nexport const ACCOUNT_CONTENT = \"ACCOUNT_CONTENT\";\r\n\r\nexport const setDisplayMobile = (display) => ({\r\n    type: SET_DISPLAY_MOBILE,\r\n    payload: {\r\n        display\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    display: SWIPE_CONTENT\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DISPLAY_MOBILE:\r\n            return { ...state, display: action.payload.display };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faClone, faUserSecret, faPenSquare } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { setDisplayMobile, SWIPE_CONTENT, PERSONAL_CONTENT, ACCOUNT_CONTENT } from \"../redux/ducks/mobile\";\r\n\r\nexport let NAV_BAR_HEIGHT = 60;\r\nexport let MOBILE_DISPLAY_TRANSITION_DURATION = 250\r\n\r\nfunction NavBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n    let display = useSelector(state => state.mobile.display);\r\n    const dispatch = useDispatch();\r\n\r\n    let displayBtnCSS = {\r\n        color: \"white\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let notDisplayBtnCSS = {\r\n        color: \"var(--theme-color-4)\",\r\n        transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n    };\r\n\r\n    let navbarCSS = {\r\n        display: `${modeIsMobile ? \"block\" : \"none\"}`,\r\n        height: `${NAV_BAR_HEIGHT}px`\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid\" style={navbarCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplayMobile(ACCOUNT_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faUserSecret} size=\"lg\" style={display == ACCOUNT_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplayMobile(SWIPE_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faClone} size=\"lg\" style={display == SWIPE_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n                <div className=\"col-4 full-height nav-bar-btn\" onClick={() => dispatch(setDisplayMobile(PERSONAL_CONTENT))}>\r\n                    <FontAwesomeIcon icon={faPenSquare} size=\"lg\" style={display == PERSONAL_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPenSquare, faUserSecret } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT, setDisplayDesktop } from \"../redux/ducks/desktop\";\r\n\r\nexport let SIDE_BAR_WIDTH = 60;\r\nexport let DESKTOP_DISPLAY_TRANSITION_DURATION = 250\r\n\r\nfunction SideBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n    let display = useSelector(state => state.desktop.display);\r\n    const dispatch = useDispatch();\r\n\r\n    let displayBtnCSS = {\r\n        color: \"white\",\r\n        transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`,\r\n        height: `calc(0.13 * (${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px))`\r\n    };\r\n\r\n    let notDisplayBtnCSS = {\r\n        color: \"var(--theme-color-4)\",\r\n        transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`,\r\n        height: `calc(0.13 * (${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px))`\r\n    };\r\n\r\n    let sidebarCSS = {\r\n        display: `${modeIsMobile ? \"none\" : \"block\"}`,\r\n        height: `calc(${window.innerHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n        width: `${SIDE_BAR_WIDTH}px`\r\n    }\r\n\r\n    return (\r\n        <div id=\"side-bar\" className=\"row full-height justify-content-center align-items-center\" style={sidebarCSS}>\r\n            <div className=\"col-12 nav-bar-btn\" onClick={() => dispatch(setDisplayDesktop(ACCOUNT_CONTENT))}>\r\n                <FontAwesomeIcon icon={faUserSecret} size=\"lg\" style={display == ACCOUNT_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n            </div>\r\n            <div className=\"col-12 nav-bar-btn\" onClick={() => dispatch(setDisplayDesktop(PERSONAL_CONTENT))}>\r\n                <FontAwesomeIcon icon={faPenSquare} size=\"lg\" style={display == PERSONAL_CONTENT ? displayBtnCSS : notDisplayBtnCSS} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT } from \"../redux/ducks/desktop\";\r\nimport AccountContent from \"./AccountContent\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport { DESKTOP_DISPLAY_TRANSITION_DURATION, SIDE_BAR_WIDTH } from \"./SideBar\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n  let display = useSelector(state => state.desktop.display);\r\n\r\n  let desktopCSS = {\r\n    width: `calc(100vw - ${modeIsMobile ? 0 : SIDE_BAR_WIDTH}px)`\r\n  }\r\n\r\n  let displaysCSS = {\r\n    transitionDuration: `${DESKTOP_DISPLAY_TRANSITION_DURATION}ms`\r\n  }\r\n\r\n  let displayValues = {};\r\n\r\n  switch (display) {\r\n    case ACCOUNT_CONTENT:\r\n      displayValues = {\r\n        accountContent: 0,\r\n        personalContent: 100\r\n      };\r\n      break;\r\n    case PERSONAL_CONTENT:\r\n      displayValues = {\r\n        accountContent: -100,\r\n        personalContent: 0\r\n      };\r\n      break;\r\n    default:\r\n      displayValues = {\r\n        accountContent: -100,\r\n        personalContent: 0\r\n      };\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\" style={{ paddingLeft: 0 }}>\r\n        <AccountContent style={{ ...displaysCSS, top: `${displayValues.accountContent}%` }} />\r\n        <PersonalContent style={{ ...displaysCSS, top: `${displayValues.personalContent}%` }} />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SwipeContent from \"./SwipeContent\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport { ACCOUNT_CONTENT, PERSONAL_CONTENT, SWIPE_CONTENT } from \"../redux/ducks/mobile\";\r\nimport { MOBILE_DISPLAY_TRANSITION_DURATION } from \"./NavBar\";\r\nimport AccountContent from \"./AccountContent\";\r\n\r\nfunction Mobile() {\r\n  let display = useSelector(state => state.mobile.display);\r\n\r\n  let mobileCSS = {\r\n  }\r\n\r\n  let displaysCSS = {\r\n    transitionDuration: `${MOBILE_DISPLAY_TRANSITION_DURATION}ms`\r\n  }\r\n\r\n  let displayValues = {};\r\n\r\n  switch (display) {\r\n    case SWIPE_CONTENT:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100,\r\n        accountContent: -100\r\n      };\r\n      break;\r\n    case PERSONAL_CONTENT:\r\n      displayValues = {\r\n        swipeContent: -100,\r\n        personalContent: 0,\r\n        accountContent: -200\r\n      };\r\n      break;\r\n    case ACCOUNT_CONTENT:\r\n      displayValues = {\r\n        swipeContent: 100,\r\n        personalContent: 200,\r\n        accountContent: 0\r\n      };\r\n      break;\r\n    default:\r\n      displayValues = {\r\n        swipeContent: 0,\r\n        personalContent: 100,\r\n        accountContent: -100\r\n      };\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={mobileCSS}>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.accountContent}%` }}>\r\n        <AccountContent />\r\n      </div>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.swipeContent}%` }}>\r\n        <SwipeContent />\r\n      </div>\r\n      <div className=\"col-12 full-height\" style={{ ...displaysCSS, left: `${displayValues.personalContent}%` }}>\r\n        <PersonalContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport SideBar from \"./SideBar\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { SIDE_BAR_WIDTH } from \"./SideBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n  let windowHeight = useSelector(state => state.windowConfig.windowHeight);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(${windowHeight}px - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        {modeIsMobile ?\r\n          <div className=\"col-12 full-height\">\r\n            <Mobile />\r\n          </div> :\r\n          <div className=\"col-12 full-height d-flex\">\r\n            <SideBar />\r\n            <Desktop />\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","const SET_WINDOW_HEIGHT = \"SET_WINDOW_HEIGHT\";\r\n\r\nexport const setWindowHeight = (windowHeight) => ({\r\n    type: SET_WINDOW_HEIGHT,\r\n    payload: {\r\n        windowHeight\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    windowHeight: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WINDOW_HEIGHT:\r\n            return { ...state, windowHeight: action.payload.windowHeight };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\nimport swipeReducer from \"./ducks/swipe\";\r\nimport mobileReducer from \"./ducks/mobile\";\r\nimport windowConfigReducer from \"./ducks/window-config\";\r\nimport desktopReducer from \"./ducks/desktop\";\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer,\r\n    swipe: swipeReducer,\r\n    mobile: mobileReducer,\r\n    windowConfig: windowConfigReducer,\r\n    desktop: desktopReducer\r\n});\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\nimport { setWindowHeight } from \"../redux/ducks/window-config\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateConfigs();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateConfigs();\r\n    });\r\n}\r\n\r\nlet updateConfigs = () => {\r\n    let windowWidth = window.innerWidth;\r\n    let windowHeight = window.innerHeight;\r\n\r\n    store.dispatch(setWindowHeight(windowHeight));\r\n\r\n    // if ((windowWidth < 992) && (windowWidth < windowHeight)) {\r\n    //     store.dispatch(setMobile());\r\n    // } else {\r\n    //     store.dispatch(setDesktop());\r\n    // }\r\n\r\n    if ((windowWidth >= 992) && (windowWidth > windowHeight)) {\r\n        store.dispatch(setDesktop());\r\n    } else {\r\n        store.dispatch(setMobile());\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}