{"version":3,"sources":["Components/TitleBar.jsx","Components/PersonalContent.jsx","redux/ducks/swipe.js","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/NavBar.jsx","Components/MainContent.jsx","redux/ducks/mode.js","redux/configureStore.js","js/utils.js","App.js","reportWebVitals.js","index.js"],"names":["TitleBar","titleBarCSS","height","backgroundColor","id","style","PersonalContent","className","NO_SWIPE_CARD","NEW_SWIPE_CARD","initialState","hasSwipeCard","reducer","state","action","type","SwipeCard","props","text","immobile","boundPos","exist","useRef","useState","x","y","position","setPosition","timeStamp","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","latestVel","setLatestVel","theta","direction","swipeAngle","setSwipeAngle","isInitial","setIsInitial","swiped","setSwiped","dispatch","useDispatch","SWIPE_ANGLE_MAX","Math","PI","swipeCardCSS","left","top","opacity","transitionDuration","TIME_BETWEEN_SWIPES","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","console","log","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","abs","factor","innerWidth","ratio","tan","sign","swipedAway","payload","velGen","dx","dy","dt","v","sqrt","pow","atan","Fragment","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","SwipeContent","swipeContentRef","count","setCount","useSelector","swipe","overflow","Desktop","Mobile","NavBar","navbarCSS","MainContent","modeIsMobile","mode","mainContentCSS","SET_MOBILE","SET_DESKTOP","combineReducers","modeReducer","swipeReducer","store","createStore","initializeEventListeners","updateMode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42bd92ba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`, \r\n    backgroundColor: \"blue\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" style={titleBarCSS}>\r\n        Penn Spark Gray\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent() {\r\n    let personalContentCSS = {\r\n        backgroundColor: \"white\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={personalContentCSS}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","const NO_SWIPE_CARD = \"NO_SWIPE_CARD\";\r\nconst NEW_SWIPE_CARD = \"NEW_SWIPE_CARD\";\r\n\r\nexport const noSwipeCard = () => ({\r\n    type: NO_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newSwipeCard = () => ({\r\n    type: NEW_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    hasSwipeCard: true\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NO_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: false };\r\n        case NEW_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: true };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { noSwipeCard } from \"../redux/ducks/swipe\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { text, immobile, boundPos } = props;\r\n\r\n    let exist = useRef(true);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0, timeStamp: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [latestVel, setLatestVel] = useState(0);\r\n    const [swipeAngle, setSwipeAngle] = useState({ theta: 0, direction: 1 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const [swiped, setSwiped] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const VELOCITY_THRESHOLD = 2;\r\n    const SWIPE_ANGLE_MAX = 3 * Math.PI / 8;\r\n    const TIME_BETWEEN_SWIPES = 500;\r\n\r\n    let swipeCardCSS = {\r\n        // width: \"50vh\",\r\n        // height: \"75vh\",\r\n        // width: `${modeIsMobile ? \"80vw\" : \"50vh\"}`,\r\n        // height: `${modeIsMobile ? \"70vh\" : \"75vh\"}`,\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`,\r\n        opacity: `${swiped ? 0 : 1}`,\r\n        transitionDuration: `${swiped ? TIME_BETWEEN_SWIPES + \"ms\" : \"\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n            console.log(\"cleanup: \" + text);\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        let center = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n            timeStamp: e.timeStamp\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.clientX;\r\n            let clientY = e.clientY;\r\n\r\n            let dx = clientX - prevCenter.x;\r\n            let dy = clientY - prevCenter.y;\r\n\r\n            let newPosition = {\r\n                x: position.x + dx,\r\n                y: position.y + dy\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        let center = {\r\n            x: e.touches[0].clientX,\r\n            y: e.touches[0].clientY,\r\n            timeStamp: e.timeStamp\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.touches[0].clientX;\r\n            let clientY = e.touches[0].clientY;\r\n\r\n            let dx = clientX - prevCenter.x;\r\n            let dy = clientY - prevCenter.y;\r\n\r\n            let newPosition = {\r\n                x: position.x + dx,\r\n                y: position.y + dy\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        setDragging(false);\r\n\r\n        if (latestVel > VELOCITY_THRESHOLD && Math.abs(swipeAngle.theta) < SWIPE_ANGLE_MAX) {\r\n            let factor = window.innerWidth / 5;\r\n            let ratio = Math.tan(swipeAngle.theta);\r\n            let sign = swipeAngle.direction;\r\n\r\n            let swipedAway = {\r\n                x: sign * factor + position.x,\r\n                y: sign * factor * ratio + position.y\r\n            };\r\n\r\n            setSwiped(true);\r\n            setPosition(swipedAway);\r\n            setTimeout(() => {\r\n                dispatch(noSwipeCard());\r\n            }, TIME_BETWEEN_SWIPES);\r\n        } else {\r\n            setPosition(returnPos);\r\n        }\r\n    }\r\n\r\n    const velGen = (dx, dy, dt) => {\r\n        let v = (Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))) / dt;\r\n        let theta = Math.atan(dy / dx);\r\n        let direction = 1;\r\n\r\n        if (dx < 0) {\r\n            direction = -1;\r\n        }\r\n\r\n        setSwipeAngle({ theta, direction });\r\n        setLatestVel(v);\r\n        return v;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {immobile ? <div ref={swipeCardRef} className={\"no-select swipe-card swipe-card-return\"} style={swipeCardCSS}>\r\n                SOME SAMPLE TEXT immobile {text}\r\n            </div> : <div ref={swipeCardRef} className={`no-select swipe-card ${!dragging && !swiped ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleEndDrag}\r\n                onMouseOut={handleEndDrag}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleEndDrag}\r\n                onTouchMove={handleTouchMove}>\r\n                SOME SAMPLE TEXT {text}\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newSwipeCard } from \"../redux/ducks/swipe\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {\r\n        backgroundColor: \"white\",\r\n        overflow: \"hidden\"\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let [count, setCount] = useState(0);\r\n    let hasSwipeCard = useSelector(state => state.swipe.hasSwipeCard);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!hasSwipeCard) {\r\n            setCount(count + 1);\r\n            console.log(\"new\");\r\n            dispatch(newSwipeCard());\r\n        }\r\n    }, [hasSwipeCard]);\r\n\r\n    const testArr = [{ text: \"hello 1\" }, { text: \"hello 2\" }, { text: \"hello 3\" }, { text: \"hello 4\" }];\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard immobile={true} boundPos={position} text={count + 1} />\r\n                    {hasSwipeCard ? <SwipeCard immobile={false} boundPos={position} text={count} /> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\">\r\n        <PersonalContent />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Mobile() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-12 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\n\r\nexport let NAV_BAR_HEIGHT = 80;\r\n\r\nfunction NavBar() {\r\n    let navbarCSS = {\r\n        height: `${NAV_BAR_HEIGHT}px`, \r\n        backgroundColor: \"red\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid d-block d-lg-none\" style={navbarCSS}>\r\n            NavBar\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let dispatch = useDispatch();\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(100vh - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n    backgroundColor: \"green\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        <div className=\"col-12 full-height\">\r\n          {modeIsMobile ? <Mobile /> : <Desktop />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\nimport swipeReducer from \"./ducks/swipe\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer,\r\n    swipe: swipeReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateMode();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateMode();\r\n\r\n        // console.log(windowWidth)\r\n        // console.log(store.getState().mode.modeIsMobile);\r\n    });\r\n}\r\n\r\nlet updateMode = () => {\r\n    let windowWidth = window.innerWidth;\r\n\r\n    if (windowWidth < 992) {\r\n        store.dispatch(setMobile());\r\n    } else {\r\n        store.dispatch(setDesktop());\r\n    }\r\n}","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport { initialize } from \"./js/utils\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}