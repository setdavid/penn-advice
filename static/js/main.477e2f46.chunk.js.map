{"version":3,"sources":["Components/TitleBar.jsx","Components/PersonalContent.jsx","redux/ducks/swipe.js","Components/SwipeCard.jsx","Components/SwipeContent.jsx","Components/Desktop.jsx","Components/Mobile.jsx","Components/NavBar.jsx","Components/MainContent.jsx","redux/ducks/mode.js","redux/configureStore.js","js/utils.js","App.js","reportWebVitals.js","index.js"],"names":["TitleBar","percentRight","useSelector","state","swipe","percentLeft","titleBarCSS","height","backgroundColor","id","className","style","minHeight","paddingLeft","fontSize","width","minWidth","PersonalContent","NO_SWIPE_CARD","NEW_SWIPE_CARD","NEW_PERCENT_RIGHT","initialState","hasSwipeCard","reducer","action","type","payload","percent","SwipeCard","props","text","immobile","boundPos","color","exist","useRef","useState","x","y","position","setPosition","timeStamp","prevCenter","setPrevCenter","dragging","setDragging","returnPos","setReturnPos","latestVel","setLatestVel","theta","direction","swipeAngle","setSwipeAngle","isInitial","setIsInitial","swiped","setSwiped","dispatch","useDispatch","SWIPE_ANGLE_MAX","Math","PI","windowWidth","window","innerWidth","windowHeight","innerHeight","swipedColor","distReturnFromBorder","swipeCardCSS","left","top","opacity","transform","transitionDuration","TIME_BETWEEN_SWIPES","timer","useDebounce","callback","current","clearTimeout","setTimeout","useEffect","addEventListener","removeEventListener","console","log","swipeCardRef","updateReturnPos","returnPosition","getBoundingClientRect","handleEndDrag","e","abs","factor","ratio","tan","sign","swipedAway","velGen","dx","dy","dt","v","sqrt","pow","atan","Fragment","ref","onMouseDown","center","clientX","clientY","onMouseUp","onMouseOut","onMouseMove","newPosition","onTouchStart","touches","onTouchEnd","onTouchMove","SwipeContent","swipeContentRef","index","setIndex","currObj","testArr","nextObj","emptyObj","random","undefined","overflow","Desktop","Mobile","NavBar","modeIsMobile","mode","navbarCSS","display","MainContent","mainContentCSS","SET_MOBILE","SET_DESKTOP","combineReducers","modeReducer","swipeReducer","store","createStore","initializeEventListeners","updateMode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.477e2f46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport let TITLE_BAR_HEIGHT = 80;\r\n\r\nfunction TitleBar() {\r\n  let percentRight = useSelector(state => state.swipe.percentRight);\r\n  let percentLeft = (1 - percentRight) * 100;\r\n  percentRight *= 100;\r\n\r\n  let titleBarCSS = {\r\n    height: `${TITLE_BAR_HEIGHT}px`,\r\n    backgroundColor: \"white\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"title-bar\" className=\"container-fluid\" style={titleBarCSS}>\r\n      <div className=\"row d-flex\" style={{ height: \"60%\", minHeight: \"60%\", paddingLeft: \"5px\" }}>\r\n        <div className=\"col-12\" style={{ fontSize: \"2.5rem\" }}>\r\n          PennAdvice\r\n        </div>\r\n      </div>\r\n      <div className=\"row d-flex\" style={{ height: \"30%\", minHeight: \"30%\", paddingLeft: \"12px\" }}>\r\n        <div className=\"col-12\" style={{ fontSize: \"0.75rem\" }}>\r\n          by Penn Spark Gray\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"10%\", minHeight: \"10%\" }}>\r\n        <div className=\"percent-bar\" style={{ width: `${percentLeft}%`, minWidth: `${percentLeft}%`, backgroundColor: \"#990000\" }} />\r\n        <div className=\"percent-bar\" style={{ width: `${percentRight}%`, minWidth: `${percentRight}%`, backgroundColor: \"#011F5b\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\n\r\nfunction PersonalContent() {\r\n    let personalContentCSS = {\r\n        backgroundColor: \"white\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"personal-content\" className=\"full-height\" style={personalContentCSS}>\r\n            Personal Content\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalContent;\r\n","const NO_SWIPE_CARD = \"NO_SWIPE_CARD\";\r\nconst NEW_SWIPE_CARD = \"NEW_SWIPE_CARD\";\r\nconst NEW_PERCENT_RIGHT = \"NEW_PERCENT_RIGHT\";\r\n\r\nexport const noSwipeCard = () => ({\r\n    type: NO_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newSwipeCard = () => ({\r\n    type: NEW_SWIPE_CARD,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const newPercentRight = (percent) => ({\r\n    type: NEW_PERCENT_RIGHT,\r\n    payload: {\r\n        percent: percent\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    hasSwipeCard: true,\r\n    percentRight: 1\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NO_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: false };\r\n        case NEW_SWIPE_CARD:\r\n            return { ...state, hasSwipeCard: true };\r\n        case NEW_PERCENT_RIGHT:\r\n            return { ...state, percentRight: action.payload.percent };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { noSwipeCard } from \"../redux/ducks/swipe\";\r\n\r\nfunction SwipeCard(props) {\r\n    let { text, immobile, boundPos, color } = props;\r\n\r\n    let exist = useRef(true);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [prevCenter, setPrevCenter] = useState({ x: 0, y: 0, timeStamp: 0 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [returnPos, setReturnPos] = useState({ x: 0, y: 0 });\r\n    const [latestVel, setLatestVel] = useState(0);\r\n    const [swipeAngle, setSwipeAngle] = useState({ theta: 0, direction: 1 });\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const [swiped, setSwiped] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const VELOCITY_THRESHOLD = 2;\r\n    const SWIPE_ANGLE_MAX = 3 * Math.PI / 8;\r\n    const TIME_BETWEEN_SWIPES = 500;\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    let swipedColor = \"#990000\";\r\n    if (swipeAngle.direction == 1) {\r\n        swipedColor = \"#011F5b\";\r\n    }\r\n\r\n    let rotateDirection = 1;\r\n    let distReturnFromBorder = returnPos.x - boundPos.x;\r\n\r\n    let swipeCardCSS = {\r\n        // width: \"50vh\",\r\n        // height: \"75vh\",\r\n        width: `${windowWidth < windowHeight ? \"85vw\" : \"50vh\"}`,\r\n        height: `${windowWidth < windowHeight ? \"70vh\" : \"75vh\"}`,\r\n        left: `${isInitial ? \"auto\" : position.x - boundPos.x + \"px\"}`,\r\n        top: `${isInitial ? \"auto\" : position.y - boundPos.y + \"px\"}`,\r\n        opacity: `${swiped ? 0 : 1}`,\r\n        backgroundColor: `${swiped ? swipedColor : color}`,\r\n        transform: `rotate(${rotateDirection * (position.x - returnPos.x) / distReturnFromBorder * (distReturnFromBorder >= 0.1 * boundPos.width ? 7 : 0.5)}deg)`,\r\n        transitionDuration: `${swiped ? TIME_BETWEEN_SWIPES + \"ms\" : \"\"}`\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setIsInitial(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n            console.log(\"cleanup: \" + text);\r\n        }\r\n    }, []);\r\n\r\n    let swipeCardRef = useRef();\r\n    const updateReturnPos = () => {\r\n        let returnPosition = swipeCardRef.current.getBoundingClientRect();\r\n        setReturnPos(returnPosition);\r\n        setPosition(returnPosition);\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        let center = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n            timeStamp: e.timeStamp\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.clientX;\r\n            let clientY = e.clientY;\r\n\r\n            let dx = clientX - prevCenter.x;\r\n            let dy = clientY - prevCenter.y;\r\n\r\n            let newPosition = {\r\n                x: position.x + dx,\r\n                y: position.y + dy\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        let center = {\r\n            x: e.touches[0].clientX,\r\n            y: e.touches[0].clientY,\r\n            timeStamp: e.timeStamp\r\n        }\r\n\r\n        if (isInitial) {\r\n            updateReturnPos();\r\n            setIsInitial(false);\r\n        }\r\n\r\n        setDragging(true);\r\n        setPrevCenter(center);\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (dragging) {\r\n            let clientX = e.touches[0].clientX;\r\n            let clientY = e.touches[0].clientY;\r\n\r\n            let dx = clientX - prevCenter.x;\r\n            let dy = clientY - prevCenter.y;\r\n\r\n            let newPosition = {\r\n                x: position.x + dx,\r\n                y: position.y + dy\r\n            }\r\n\r\n            let center = {\r\n                x: clientX,\r\n                y: clientY,\r\n                timeStamp: e.timeStamp\r\n            }\r\n\r\n            velGen(dx, dy, e.timeStamp - prevCenter.timeStamp);\r\n            setPosition(newPosition);\r\n            setPrevCenter(center);\r\n        }\r\n    }\r\n\r\n    const handleEndDrag = (e) => {\r\n        setDragging(false);\r\n\r\n        if (latestVel > VELOCITY_THRESHOLD && Math.abs(swipeAngle.theta) < SWIPE_ANGLE_MAX) {\r\n            let factor = window.innerWidth / 5;\r\n            let ratio = Math.tan(swipeAngle.theta);\r\n            let sign = swipeAngle.direction;\r\n\r\n            let swipedAway = {\r\n                x: sign * factor + position.x,\r\n                y: sign * factor * ratio + position.y\r\n            };\r\n\r\n            setSwiped(true);\r\n            setPosition(swipedAway);\r\n            setTimeout(() => {\r\n                dispatch(noSwipeCard());\r\n            }, TIME_BETWEEN_SWIPES);\r\n        } else {\r\n            setPosition(returnPos);\r\n        }\r\n    }\r\n\r\n    const velGen = (dx, dy, dt) => {\r\n        let v = (Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))) / dt;\r\n        let theta = Math.atan(dy / dx);\r\n        let direction = 1;\r\n\r\n        if (dx < 0) {\r\n            direction = -1;\r\n        }\r\n\r\n        setSwipeAngle({ theta, direction });\r\n        setLatestVel(v);\r\n        return v;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {immobile ? <div ref={swipeCardRef} className={\"no-select swipe-card swipe-card-return\"} style={swipeCardCSS}>\r\n                {text} (immobile)\r\n            </div> : <div ref={swipeCardRef} className={`no-select swipe-card ${!dragging && !swiped ? \"swipe-card-return\" : \"\"}`} style={swipeCardCSS}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleEndDrag}\r\n                onMouseOut={handleEndDrag}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchEnd={handleEndDrag}\r\n                onTouchMove={handleTouchMove}>\r\n                {text}\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SwipeCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newPercentRight, newSwipeCard } from \"../redux/ducks/swipe\";\r\nimport SwipeCard from \"./SwipeCard\";\r\n\r\nfunction SwipeContent() {\r\n    let exist = useRef(true);\r\n    let swipeContentRef = useRef();\r\n    let [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    let swipeContentCSS = {\r\n        backgroundColor: \"white\",\r\n        overflow: \"hidden\"\r\n    }\r\n\r\n    let timer = useRef(0);\r\n    let debounce = (callback) => {\r\n        clearTimeout(timer.current);\r\n        timer.current = setTimeout(callback, 50, exist);\r\n    }\r\n\r\n    let useDebounce = () => {\r\n        debounce((exist) => {\r\n            if (exist.current) {\r\n                setPosition(swipeContentRef.current.getBoundingClientRect());\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", useDebounce);\r\n        setPosition(swipeContentRef.current.getBoundingClientRect());\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", useDebounce);\r\n            exist.current = false;\r\n        }\r\n    }, []);\r\n\r\n    let [index, setIndex] = useState(0);\r\n    let hasSwipeCard = useSelector(state => state.swipe.hasSwipeCard);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!hasSwipeCard) {\r\n            setIndex(index + 1);\r\n            console.log(\"new\");\r\n            dispatch(newSwipeCard());\r\n            dispatch(newPercentRight(currObj.percentRight));\r\n        }\r\n    }, [hasSwipeCard]);\r\n\r\n    const testArr = [{ text: \"hello 1 testArr\", percentRight: 0.25 }, { text: \"hello 2 testArr\", percentRight: 0.5 }, { text: \"hello 3 testArr\", percentRight: 0.75 }, { text: \"hello 4 testArr\", percentRight: 1 }];\r\n\r\n    let currObj = testArr[index];\r\n    let nextObj = testArr[index + 1];\r\n\r\n    const emptyObj = {\r\n        text: \"NO NEW CONTENT\",\r\n        percentRight: Math.random()\r\n    };\r\n    \r\n    if (currObj === undefined) {\r\n        currObj = emptyObj;\r\n    }\r\n\r\n    if (nextObj === undefined) {\r\n        nextObj = emptyObj;\r\n    }\r\n\r\n    return (\r\n        <div ref={swipeContentRef} id=\"swipe-content\" className=\"full-height container-fluid\" style={swipeContentCSS}>\r\n            <div className=\"row full-height\">\r\n                <div className=\"col-12 full-height d-flex justify-content-center align-items-center\">\r\n                    <SwipeCard immobile={true} boundPos={position} color=\"#A9A9A9\" text={nextObj.text} />\r\n                    {hasSwipeCard ? <SwipeCard immobile={false} boundPos={position} color=\"#A9A9A9\" text={currObj.text} /> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeContent;\r\n","import React from \"react\";\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Desktop() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"desktop-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-lg-4 full-height\">\r\n        <PersonalContent />\r\n      </div>\r\n      <div className=\"col-lg-8 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desktop;\r\n","import React from \"react\";\r\nimport SwipeContent from \"./SwipeContent\";\r\n\r\nfunction Mobile() {\r\n  let desktopCSS = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"mobile-content\" className=\"row full-height\" style={desktopCSS}>\r\n      <div className=\"col-12 full-height\">\r\n        <SwipeContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport let NAV_BAR_HEIGHT = 80;\r\n\r\nfunction NavBar() {\r\n    let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n    let navbarCSS = {\r\n        display: `${modeIsMobile ? \"block\": \"none\"}`,\r\n        height: `${NAV_BAR_HEIGHT}px`, \r\n        backgroundColor: \"red\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav-bar\" className=\"container-fluid\" style={navbarCSS}>\r\n            NavBar\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Desktop from \"./Desktop\";\r\nimport Mobile from \"./Mobile\";\r\nimport { NAV_BAR_HEIGHT } from \"./NavBar\";\r\nimport { TITLE_BAR_HEIGHT } from \"./TitleBar\";\r\n\r\nfunction MainContent() {\r\n  let dispatch = useDispatch();\r\n  let modeIsMobile = useSelector(state => state.mode.modeIsMobile);\r\n\r\n  let mainContentCSS = {\r\n    height: `calc(100vh - ${TITLE_BAR_HEIGHT}px - ${modeIsMobile ? NAV_BAR_HEIGHT : 0}px)`,\r\n    backgroundColor: \"green\"\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\" style={mainContentCSS}>\r\n      <div className=\"row full-height\">\r\n        <div className=\"col-12 full-height\">\r\n          {modeIsMobile ? <Mobile /> : <Desktop />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","const SET_MOBILE = \"SET_MOBILE\";\r\nconst SET_DESKTOP = \"SET_DESKTOP\";\r\n\r\nexport const setMobile= () => ({\r\n    type: SET_MOBILE,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const setDesktop = () => ({\r\n    type: SET_DESKTOP,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    modeIsMobile: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOBILE:\r\n            return { ...state, modeIsMobile: true };\r\n        case SET_DESKTOP:\r\n            return { ...state, modeIsMobile: false };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers, createStore } from \"redux\";\r\nimport modeReducer from \"./ducks/mode\";\r\nimport swipeReducer from \"./ducks/swipe\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    mode: modeReducer,\r\n    swipe: swipeReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import store from \"../redux/configureStore\"\r\nimport { setMobile, setDesktop } from \"../redux/ducks/mode\";\r\n\r\nexport let initialize = () => {\r\n    initializeEventListeners();\r\n    updateMode();\r\n}\r\n\r\nlet initializeEventListeners = () => {\r\n    window.addEventListener(\"resize\", () => {\r\n        updateMode();\r\n    });\r\n}\r\n\r\nlet updateMode = () => {\r\n    let windowWidth = window.innerWidth;\r\n    let windowHeight = window.innerHeight;\r\n\r\n    // if ((windowWidth < 992) && (windowWidth < windowHeight)) {\r\n    //     store.dispatch(setMobile());\r\n    // } else {\r\n    //     store.dispatch(setDesktop());\r\n    // }\r\n\r\n    if ((windowWidth >= 992) && (windowWidth > windowHeight)) {\r\n        store.dispatch(setDesktop());\r\n    } else {\r\n        store.dispatch(setMobile());\r\n    }\r\n}","import \"./css/base-styles.css\";\r\nimport \"./css/bootstrap-grid.min.css\";\r\n\r\nimport TitleBar from \"./Components/TitleBar\";\r\nimport MainContent from \"./Components/MainContent\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport { initialize } from \"./js/utils\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TitleBar />\r\n        <MainContent />\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/configureStore';\r\nimport { initialize } from './js/utils';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ninitialize();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}